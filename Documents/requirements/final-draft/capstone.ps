%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: capstone.dvi
%%CreationDate: Sun Mar 18 22:26:27 2018
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold URWPalladioL-Ital
%%+ NimbusSanL-Bold NimbusSanL-Regu CMSY7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter capstone.dvi -o
%+ capstone.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.03.18:1526
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BFE
C6663C275934BF33671BD55C838F4ABD3541396F5741E280311FB6537C611BA2
451F461DD52B5C0726F68EDD3146F069085199CC16681FED2AD0A7B09F72A4D4
B36D153E5B17838D497D8CAB42412D8D6CDB8DBD1FADA5AA86EE07E447D8FED8
BFDB27007909F5D538637FEE65804AD9F47FD5D09FE551F14295537D6DA2E4F9
E5FA2905FB26784F9F27A3F3F226449C2F05D1CD18F7FE5FA60F8F48E2604F77
75BCC1B2C547639FCABFF4EC3BCC994CE1FD48E705F80B009ACC12142FCEC9B7
C23EE02FD19C327134B56197C411E3E1EA548FB2E402EB7ED23E493C2345D976
7C3966E5053D6DD6940D0780E8B6ABDBB695031B40EA1AEE0B67BC4CBDCE7EBE
0CEEADB782FFA929E83E3A8E4FF1964DD14A2B8998BAC8AEF2D4837251BBBF06
5C283B7C7B3BD08D72049185AE13AD4E96C8522735074AD649CABF3920190046
35622539CEBB6F132F08755C1B55A1BD2E212FA171248D2CF5C85D9B8D2CB5E8
5CC06BC191CF26E8D68CEBCCCC0CBD4D31E445F889CB210D919D86C106679FAD
F3E2C18B85D025B410F4524C49A43297C9CEDC20F96623E6932E86C0BA3D2AF8
649CE52A6A0351232C016B02B3B7A72894853F26465E017991478CD587D085F5
604285E85083D1F2F28A9FDBF61B342523889C729D6973CE3C2DAB27BE4C90BB
20530A0B4DAEB9836072A837B958ACE6FF2F30DBB73E9C482C38E329858F4F90
F3AFBA08F963B24D5ABBFE0FA1360C01D7A7A86EE2C49065C57D49B88B1C2591
4A4D3285ABF6AE47FC402C9185BDADEE7DEB5A5B3D74E6A726A1BD5906781599
AB1BB54FE371D94E6C99841F7C629F3B87495A9430D4F44003429BC673DD7173
47672963D0255D0ACF87AA716F2FD6ACA199792B561CABEDBD124DB68EDEA2D1
3AFC971805B0D3425553198E4683139ED701F1E78997938180606FDE2005ECA3
01E9C8921C9B7EF2D10EFCFF7628044477262F84083720D9B5CEB6E0B31EABC7
AADC6327B3325E51FE58FC26FAB5DBA6EFB6FDEC977F9C78F5BB0972FE7C9E20
161FE2C55B0728D0E49466DEE887E368A835569DB77B22E158BA172B6020F3BD
252C4251765311BCE783A4477F8C9D8D83343E890B83DE4E75722C9F37E4C9B4
9472454250B41613348781C99243D5F8211C9137700FC35A4323DE906C129679
CF5174EF6AD148FD770FA3A749F398CF43FB27CEFC1D9A7C450669651365B24A
8D0AF9FB54B9246AC401977B40002FB861E7FFE8CD78EB15DFC9F7A304EA700A
CDA0ACF34084EFB5664EEB490E5A832005EE49716BF925847F96EC18CAD7CFF6
81352F9FD2C6E23CE3AB0B98BA451610168201648E4ACE57ACF0C301CBEFD1D9
91DD96ECEF36931256D4D1590F31342AD2AD3E3CD65638C71342F27D79F7F5A4
2B5F5DF31302C024B929FF470796626F0795122379B1581BBC73787EC4EC2DF9
FF5831F242B8B5A0FB902F9B2355F42F917799EA0B4A4AE8F1ACECD1339A3FC0
F865201B6D7C9C6FD74427C914F067479B3A4A7FC0E0823871776F80CDEF2140
DC00FD5F6F1725AE16D44B8FE84C3E122D4EBDA4110ABB979B0295FBB55CBA2B
0D731BA72CAF5507C975ABE401EDB52C881153E8228D33EFB93F057E59608234
3A6A9E43A0310316F78211ADAA1AA9954C8C41A1A5AF60249D7EFDECC8DD734D
9BFC4A3D813CCF13D5DB889210B5BFBE8D380ABE4CDD74110BD6BA8C25ECCF84
7827A760FBD8BAF9809930D78834A7D4BD3D43D4B2634395F491974C0FF0D79C
C68FB1A5DE7EF8497F2B33F5B8E384DF0DA98FD84AD4180E993172DCFF4F82A8
D7AD9DC61760E7B2BD1AB594E30D797581F5A0E81AB0F7AF1D54553E8660DF4F
C881B1B290AB76EBD11A36DF260B0B6D0EA7D9EA5958819F5CE03BEF6B59B669
723240EF425160639F65C26996C69E6486A20072EF3ECB913B4A17469EA26895
B88672C6223229686BC2AE4C6272763658D5817D8B66C7CE121320779939BAA3
5DA4704660495819B57665B91A74A36CA64CDB77B59273EADBD89EC9E0D5C5DB
E7249C5BCEB582553CB3BF0BBE6528C63200F8B96456C08FB37E2E892BD48A27
5C4F7DAF9A7AC45BE33703609C7F9164990AFAA86C04ED313ECBFF60CA3DAC5A
5F84F53C86FA9BF1093DE136C8E711C2126231A398A219F043B09A4EE76448D1
CD1C22233115FA0598477BF73995AACFEEA5DAC0B4AAD7140FD31B66EAC5BB97
6C6A780EAA6A8C2E43E8716526220C667DEDB795AF15CADE64DADE150D2674F3
52414BE5A213FC7A5CF34A17BA8BB81DB3F8281ED8FDB17F2A277D6F00284F06
63CCC2F53F489064277A9AFD2339BDD82F37C499E0FC55002309EF81A99546AC
145BE61D1F77A6B1A68953CF0B4C83111333C0ACA51C65D8AF0215A788A7FE39
160CF51FEEA8FAD3E73DCB10B5B684F58D67F31F2E2EEE990A2F78607D3BD3A2
9A4307E51DE7EAEE9862BEFE1E1A13B84C2C5BCAB834B340E7D20CAE32B5EAB1
BF96188DAE424F25644D58AC7AA64820F554116589BE4A4DA677AC82820E7FF3
C960A06E76F6B885F8EA8B8B8F8E8199B574CC1DA889FF2FF128703407C5C2F3
4EB95062AE0348E1118591B41D7E7AFBFCD7410B3E2D1A2C4876C0C18948FE63
30F00F49D80C7A805F78893B50A98F057880FD287DB8D742D6AD2FC443DC0393
0F36B48779449BAC308C6F43FE6CA802940C44AE02381732BEB2B95801522ABB
9EB8EF97A4FA5A370C2F5BC1E1A1E7389A6C02CC74612D764D2F51B2393AA925
84233F45236ED5042F78D8A12F473CB3622D48A843CDC9F7B57E912B68D46BB0
87A3180B53FF1B673365217805E40AB6EB8BCEBE204B9B0479413CD726939724
D06A57ED2FE2E71F14475AB66481F608DE3AFAA767F0F23A7B2417BBD0677650
74F1F37050FD1500CB0A1693A3611BE0D44E6B5DB3A65CE8D0538C986A7BB104
5D70E0C1CF9FBD2F2CDB1E435130296CE911118156D4D3249712471E85A05952
9C7D6101E2D5CA9C18298692BA99DD39628557A8CA9C49883512F8F566028815
C4BB264B10709DF502E051A1FBF642A8F8941EC1CC8821B070E435D5E2AA9E48
5D6E501B2E1E9B6A0671156DE1D5BC81CB52F5C21D240ADC959F8EF56ED5B19C
3D5D52E67CA00E739BF74AE062051E8B769AB888922748D9C85E79F1E1C1DD2A
5D1E99AEC1D37A6200BB12A83EA8F6E0609DA559E0BC5463DE743F5D7A922DB8
E506A8536C3A8A03CAC720BBD2D4042E32532E7FE16982603DF61C5C663B5388
78F6246C40D611C5ADCEA5A33610813DAFD1329992CC000C0980D4B366FBC975
AC1AC11FDB0668DE84E714FDB605A83C3D88E412A976D682B61F780696E40CE9
5DBA0C0E8E9D8863C091D1E732ECAE87CC513CB3270E7804A040BC772497C1F4
984BCA43D126EB40DE81A91908B10D586E66BC6B5117C802962AB3BA69BFE520
A7DCA997A255348EC52BB4A1992B2B5205CFE479D658127B76E48D5A334D0D2A
D722F97A1C3F476C30B350237D82A0217582BD045401BF416404B3FA70758A91
36C372D6D698FFC0904AFD6C06F7680B9140C4AD138DE7B019017F07FAF4BECF
C33CFF111F801E335C38AACF67DDE0217905ED11DF349F54153281472BA8FFBE
6725CCC390DBB87D6FC5793367EC916BA32DA8B964A0751C40846188611E9768
91A2BDFC66EE858D35E655853496FEA6D64E1FC582E77F6E21A71D0C319A466A
665C3EDF8532F18CBE8513DECCB3A0D75FA456A71DA0567DCC7B9DC973319C47
30E532FC9A74A40B2812488FC66A5197A556E05CC460DA5FF8BAA066043F44D1
AF31CDB2328F8CF9DC677D2EB637A72100B74BE22A80B3B4F5EBF30905CAAAB4
FFD115846BF98CD6DD8CC10E1234F448C93A3C6D20B40CDED1AADCA60A7E22E1
4EC3674516DE852115F03050016897C740D7BA1AD40360C017A58385E535F4E5
C64D2851B9CE1348D537A4E62C66B3F03312C0E048404CE30DE9213AC7681B00
F8EAFCB4B635CC9D885B533BEA766332C3E79DEF18F9A17188A92378BD515608
5158817DF61A9B06349337C81C6C9F40228CEB1531856BB4DC6D9E4503E0EAB5
DE3401390F8F01B606C4A0A2C8228F120B0A3172A3C6F19DB81D8D1EF5BCE417
F13A7729E1E9D2F6F9E7E5E0216258CEB3716F09C8EDFF496B106857BA914177
F02B00B6103D5F03C92D88DA2F7B03A4AD190AC0400F1864ADC733AE203D9C47
8995BAB090E3434034B8BF1C73F5B7D0C146F191EF98C9DADC195E944C633A32
9F37C4E74F80FEBAFE5C355AE589ABE186C4DF684BCB8800DBFC7680618C923B
ABB061AEA313F10EFD694DC5204A24F8A4A1ABCAC35A2E8CAE488A1F194259E4
C0A2689D828F863EB3EDCEF9C018C3D8273DA913CC72703228D5D07DB41DE0E8
BF793DC3D2208D208E680F953A7E3555C747173D288BB7D999DD18FEC82B9022
4198E7B0AFF653300EEA13147AB07115E51B64E0D3B325C1A98E631A2C84353C
C41E5F8DE64374A7FA744D59EA520ED622DCA643B101F37AC1E6407B167F04C3
C73E71EA3322A5E0821BFAA4009DB8A3161571C7AC8707594E8EA8AEEC8F1E00
C61B51DEA07DDD2C20AFB10C95B8E02EDF1A225914131CC3FF72242AC5E044AC
2F66824AE151CD823D7994A0C1F3781B29441EE7BCA5D426822D2C8D709CB610
C935C601D66D242C328C4C0501E72B1C1EF216117AEBCA8F4540AFD31DEED484
5DB662E87168ACEB217C1BE26F797A999F4405E08A3B1B6CEA0A5AB043655FFE
7A6D2B00F1AA75CC72516F881E2DE96E4A24A407D40877134171038EBE7F5C4B
D007B915A9AEF8C46F469C9A94BCAFC9DBF0049C85266E5A133C9D7A32C7453F
A231242DC5E3FB64D35DD07F0817E59269AE170C10C217EA56B73B38447D400A
8DCFDD26F25590CEC8C64834FCCD3AF3A939F6F0284A15BF280BAB6E88761303
271274D0A26CD217E3C33D481974E9A2E3A3C12CCB460E7D37F4F37AF0BEB4F1
B71F4898BBD96830A117E52A6C58DD1962C77742A8C0114A8DF554986090C8F9
08F1B57E04C99BF7F56AE69407ABBA5AC554C7A94BFD3A6257B2E234CB31B4C1
9E2004530E8F736236DE861983979B100B84152CF65B52A64EE4FB909EC29BC6
A5B584C1511E1B075B28A6DDB0D5AB623B2B859A6599F5F7015EA65BB8397BDB
7C0FEFC2C12B3CD8D1B3253514A97E55EECBABD31382013A13F6A9C398F80CE0
64524D9D68C58C14993457B3DEC06354B26F70F5F205F1C0D67ACC2654AADB23
BE99CFF68A171EC5BF5F4777E0676E4B070D1A9B67CA89C32EC8E7C5388B3F44
BB1B16C926D616D11FD34CF8DC90EB04503A72D35BD8212BD791920686F6574C
8CD3E4E6AC5F74F992A7870308170E8275B6DC82E1BCEDBCAFA708A1CB6B4E49
8A7FE0D03F4F53AB6A85994BA52B3E689AF419AA0B5D8F11AE5512C2BB2713E3
C0A21FC66714375D7136CA6F57BB4D643B1ACD6DC330FB0EA008B70CBDE612F7
FE3863FA3C11E8A6D85446033C16113602163D500E15518CB4262E7FFCDEFB6E
21673A0EA228056B28D329F2D0D2E0B7D3CDF3F8251430F9A6B6F1EF9E4CE43A
3BEAA7318AC7FE913026F364CEA62A5779BD08F03CCAD9316EA3387F088F6DED
3A41213167FF6F021591F31B1DF029A1752075D0C95DF2C187AF8C97C337372C
DA0B92EDBC45E082B4011D45B50181F65B3EEA68D8482DBA49BEF853B5565598
B6C439A2E90E3C71455321AEFBA84C9BC4093E2151EA61F538857EEC821483D8
0ADE4B8C30E1F06EC85F0B4EFC2554530E7BD287A94CF9CFE63AF6744670C92D
7236CD1D196CD9AD8E37FFACACA48A1066F2CFC5FDA466400A884A755F6AD740
EF7B4F6DD53C128A562261383185DEACDF232517E295655ED363E40994CE92D6
5E9E0B74A706953165CBB80B2CBAE0B1E8AD616CBD10EE7735FFEFA9801E47A7
C0EE2F68E361D4034E462F11982ECB740AA7C0CD7136022F7F067AC15B9A3B0C
AF7FEAB056EA0B7856D540B61473D5229D3879AFFADDC5EBCD699367C5117336
4B6974A923A11387078AB900626C7408FF942D473C5C7F8101985258FE8F780F
E25D6B4ED96FF784B325D6173595FB02EF6F7961CB2B1C94D31AE93D12359725
4F8CD162EC8B6161DE73497A3B48229E6223DDF0AA26AB1575D0F6892820F846
5C657D4BAE7FCF3A7334129DB126E6FED375BBB6EECF58EDB08B71DD550EF6B5
D5130D438067DEBEF176B6B995F5BCC6AAD52C5D46F4B831CB683996DE0AB1F7
7F35E0D3CC2E8374873CA65798FC8A2933368391D95414435ED29603CD2A2FA5
55B1B28030C6FE09A18C88857C44095C704849C51BE330065912FD0CF8B38CA7
E3A0BDE43D8BD89B7ACCCADC65A63B6C9C697F344957560EE2C380F49988C855
936EF155DC60835EB0ED7417CDE937FC52E12AC90B2C9AF9E2656F5EF06079D7
0BF67755EA76643B7742C9903F19A3CF7D41179C967F8BCA4AE0B0D4B5C5B283
015E8279FA7C465140EB6439F66D3DFF890E43EAE42992293F0FB1510238B1C6
97E096184A10C5F2FA017251480069B588AE234E9F41C63BE1A3559F7509CA9D
6756BF79F1D8E46EA8B5592F9866DE92D87131D224CAFC780567FD6009D79DDD
9B4B20FDF6DFB5991B5F4EDCF44D12154D8CB759E3728658908381B7CF04694B
791BC6F54FC7E42FA134CD2D2206519D5369F136EECC1923A0698126AA71F351
368AB94B49F9EDCDECD6B5F690F6307C004A764EF76A128CD8D185158CACE8DF
D6D48A545383F2CA4E79CE949CEDB65B11DADD0E5F1B89D35C673FA2227F129B
290598C4E94B5A824A3C77F969F9D2D92C3B9B65D6D70ADD9A72791AC0CEE330
391693A63445B3F637A9D7AA665F636647654DD0744B5C5DAB40CE6601C71B55
B85217803A77062AB1C827DFCFC4D8BF22A69D6B740972621D71B6C167FF26C6
E4A0358CFD9565A86DAF7E12ABC6F37E5C29464D98774377E1FCBC122E876AA5
BE61F84429FAB7C1F48B86F206D7628D10225EA401DB454BCC97E78F837C6B8E
6B2AEC3E55402533D2B8E7897EDDAE48B51BA147E19D68525879248B74197600
20B6F1A045F6212F950C9406E797B8EFDEE18692A44EB4C25C728511DF1DDD04
E44AD3FD17A2C6A56854206D95098E2350C257A96320FD0A6B0F8CA07C3E87E6
08377A14774CCA28A466731CE5C6AF914E2DD27C8018BECD829A4BB92A217CDC
C958F9C4B19B9AD0AB4B101145F8C7033B87072A685E1FEF63B71141BD4F7164
344947526AF9CB429DAF3A6F5F1E077914468D7DEA30CE9AA16C22939D719503
620C3F143E898E162BD9BB2613725372BA743C6E65095BCBF1639B8A123898C8
8EE816DE564A3A53EC552E6FC201B202375E38E3BF80E31012C74BA904431E02
719E7107248E2ABCFD153A5D06EC9DD693EB667C298D25314740F95D23C8A096
52131BA0DD78BF5FC909CF1C88C7565CD89D8261F9B4CBF2366DA25FD7177EA8
68A48C9E9A9932338F3D9493C77896CDF0E9D58DFE831C8B527A25AE5A8ADFFC
590822D02BB2A5A27271D06D11E1096709BDB6D8C9510DBF277B31B8BF2B8675
50F1125AC8AB538565E06699AE5D68759A52096B795E6062F1A56F65B8FC21FE
C40F4059C2EA3DEE94D79A8E323DFD6CA218A1CB03FCB945FC24376A45F2DE0C
21347A3D89E579F2B1719FBA71920862456BE1232B7450237CC557F3D5586DB8
783F06030B0E5C758F7A279110DC27053E4C104C322503F37A5AB40178F10648
832847767179A052190509727D8385E5F898B7E28470245FF44F8665E0E64656
A9672293E79B4C52CE63ABF9B840B8FB3791B7E90B793FA88EE3DB77887BF387
A5D34D7810FBA44F689BB04A12A787BEA2961F55683958992778F2BC6C616E48
34F3E0647900C97F6A55B736C601B5E996FFCEDD4AD75116CF84F130769D75D6
19810C590B34C69D1E8D01C401F2785D2A358E0B8F82D791E20E916B613638EC
5DFD9187CD17354A6FA6CCD14490D0CC5D1BA6886DC44CE7FAE102A8BEBC5D66
5E90C3038F1388C4604675EA7377F7FCFA40ADD1D8B1909DB256F5A2562A8A24
A32CADD00F7D8F23C67C48E43DDADBFE12AAA768835A77A62CFCC05CED52ED07
652914BF06C774D2A4340FD44C35250329D53AE3BD1258168ED1552009749504
8B00B93004125E6117720C4A8B1DDEF8BCD9B7F07E932BC9F78CD0476CE59DEC
1F215A49782F144DD9F596C7D54D4125A7EA2F92207C56CCD3F735589A89639C
1C7D334B648E11C3659BA7CDFB5FC38E880764B6454A1F461C02D94259128D2B
2D62A29A2C495889A645459A36D8F643413C54F127FDCA68F480E451D986704D
2F749380EE15CF8492E0D4A9FBA8B9100A312E82B29BCE6904D8A98FF866ABE1
3496D34BD63D94048BB3B8F647B95AC6B30A15DD6412C3CCAABE807082C88D3D
0D960FFB6B386EC6C827709C13BF4F9C9378F5EECF7A3A6F93A7033771DF8EB9
CD0DF94E0BD0E80735F683B944814D6D9766A2CE8BF08E5BC37AECC5FF9BE705
D2E4AFA6CD10645F2CC8E86EFBDECA3365292909EE79FE2945983BC9618A94AD
14913C212B1EB6DC9458547598626A10265DC205CD8FFD81E90BCAF211014052
8E6C1C43AB87186F2650B1FAC2C7E3D19BA29888122A244A44A865216DCE003F
C462E0B6D54A30C3DBD7A61B06D63389A04EFDA301519CDB5DF1C384368309D8
8CEA9FA7FC82F9E206998C25F760169CBA1CEEE2EE24BAC582AD3F7DD4F4AFBD
032EF2750ABB9C0D702588AF81E4B2E3C0DB574243F63B1C1767A866F1F9B4B2
7B64CB3D44108711026AA91AD38D69132BB3CDA70EDC5342656C12DD50C1FAD6
1669257C195560586BB567183114C9895464ADCEB27BF54FD908650F54EDCFF0
7F1FDC473ABE8F1453155089A34A007D82C75B81149C64456A88F88F754C3ABF
04145AB9CDC8D55D535F4A2C5E5299DD62758A3E5EA09EB5941387A78C1E733A
92C8B97FF27348B1CDE90747FDD0D1FE3262696586A92E10FB3E8D7353FBAFA3
0925EA9957104759BEA0F7D0201F342B0E531BF23E9A7AF648808E8EB0ABE955
DFF5D18D82DDC9333A06B22CB4B22B92269E14A11BA6A5BC7DECE20029034C88
696774E1F77728A6C5FF3F0ADE1EB4DE93C91DDB40B4E30777C51F35D267D135
532232FE5F02F3EEB5DA8E4B3F9DA87BC7C2EFE6C8838605E18466C60CEAA0C3
C4DD02730E6177700E2A7FA861500A83FA40F7BEECD78B8AE3B5A57C76F63EE8
B1561650B6F11F7028F186EC532EAF53CC61BD37A7CF5B0F58B4C250F283D739
C2D2D12DC6CD0A4C0D96B78BD1D5A73E157AECB9F3F59C0D736946734D1F4D65
048F2AE84F226220DFBA0FBA985D136415D0F69139C503ADFC71C5F898C408A7
E5479868EBD29C9ED02D7C6F159B035A561C376465F9331E5C7BDD1DA502EB98
6520012FF6DC6C558739DDEBBBFF6170BACE74C2054EB96447F7DAF2599EF271
8C3BBE737BD085229CD7C6803C3038B71477715A00DD0FF50F7A508EF9B24E26
424F511AF6500A26ABC849FFF0E9969FC293CBDF7584CDB74BC9F45190E73B45
F78AC1CE5BA5CFE547A418F6F2D6672EC35C10213141AC0087810B00EAFDCBD8
E1317780B06EF63A0629BD9C0CE0730E2148AD363D407FDD3E5BCCFCD042F344
C7D51084FC653EAE2D03C87FC2CA0B9CFFFF0802EF9341DB1544437CE381C6D6
01FA9184D9C324D2DC6C1EDA32F3DBA8DB8B2C4487DE1D8BC06A73F6BEE74975
842D21F064D937C0CBCED5F1644A0251DF9509756DBE4BADE6110F997DC2F715
E7F525FB5F220B626CAB57FFD593943497AC41ED197EEBAB5246C1A8968022A5
49F7843D1C943AEE08B4380D93ACBB9EEC401EEF971A52A9A37AD5CEBA8E264D
2CDD40ECF23EDAC75933CF06B87D87560AB4369AED2AE9A79C74434361628AB3
4F1F83AE434868D71E522619EABE7060CD2981B075036DF7634B341B03FD01AC
ECDCC3C9F143E5FC57520829DDDCF3BB6398CC428C15431A61AD9B26CD990666
1F12CCD45E3A2675D933B378624AE619C10C5A1B5B3D53FD04181E5BC5A9F564
C6E80733A5899A341A0F2DC40214BA058621286E38B0DB3AFD18921352340F30
B983024EE9541B60B2504F5026939356BAC28F9799E784CB695B73016C7BAEAD
EE68B72438B5F04B18B5DD3F742689B3E8E93A640A20363E497B5315EC35BEB1
C19A67CD1792EA24B1EA76528D00E7BD7927D8E091DEC1D7C4D2A17D1BFA6CA6
2062C6A017BDF9C4A714EBFEA809D494D9738BE6D0690379DD5578A1D6E8B63D
DA05A5A24C1285BC91BDBC667B8825B774B16BAB0AC3804EA1B0981AFE60C32A
956FC88F4DA95CAE50A3564EB02BA7ED3769B466475D2430C8EB8F41D2B92915
E9544817BDE8B421840850CCE90FFFD23FD81F57562DF43AF28982A4470A7157
ADF542DCBDC0D54AB4B6D20E34AF499EEEBC1BE22DE322D36E75EE27F5E7C562
7D53F438581E4E1051A715399BBD6EE7A81A77E8123F79C21BE1B66476AAE16D
383B9D93FB349B9BE9964FD7D79D149475724B4743F9907633331DBD3A13D927
138E17A7B32AD4E82FADAC6C3829A77B21D4D2B6E447A751622F19072102667C
7848497110581FC1AFE083D4F56FDBB0B23802C2BAA93676F2786D00CD234582
93BFBA9F6F7335FDFC57213E6BCC72F84DC47B5496C0BB9F5BA86881278EC545
49F50DA04B5982B409F49232A61A6549D974FBFA88369D088B19366FD9AB35CE
FAE60FC97C6B9EF843CD60CE8C69D459B385F7A70A6C3D6D39AB0BDE4E8A048D
E4026A9BFA44E7A34F7B469091B4182B33BF1DA6FCB815622C7CB6D29BA26352
397C3DC55A0FCD95276517788B57C33558FBD942F3293E79CD0191AE8D31094A
A4A74D6EAE3CC10ED9760630CFFF16DBAE0E230887AEED675B468DC2D87B7EAA
B64220A2E61C48BD2B8CFAE86EC0A4FD7D91C9EC9872706B290B8C9EA925AFED
9C9A2CBEDBDF0241DFAD99C35791FE45F069B7946B5EB1D7A5CFCC0057DC09CB
0F19E5AAD0C27B8608315AB055A39C48091E72115EFB1E975595338AAC667E1A
CC0A3D0AF0B6A0995FA25B67430E43D16E0D780DA825AC347EE138DC959E22DF
0977C4EC2DF9FF5831F242B8B5A0FB902F9B2355F42D337F20ED677569C646EA
23E316AEE1EC29BA8D4A7B94EFEA537EA2E226B8B932A195CC8EAA08CCD793C8
4D0A554F270F2F4E4FB036050BA3195A1F79414B141B0B14AC697034E4DAB271
85740F90647F8666CB344C8E76F7F4C0C7733A6E3FDB64A06B4B33575A0CE6AC
3EBC31F70F6B9F22A7DC38D413609014E6BC50615C33DE3914251F0D8BD58651
E982A69181FD852E756895EF6DE53433AE0ECBA12DE954F3304C25B58EBC682C
0331241D8749AEE0784A92B44A2550962148CFD15D76AAB3B0B477436CD15CC1
37F912A27BF2DD9099C4951AA911D6ED91446A154FC90D63580B9DCFC110B375
EA575D9D4E6880ED47780912E961B894CC4A59D7479AEBA895F8AD7A723EC107
1F03526ACB5D36849122443B06484D40FACD60E7A99B61014836249AEF8ADE9E
A917FB1AB90922247D81A698376E1B3CCB9CE3320574FA9C0BE8F9CFE04A753B
82978F6CBAC0090F06E79A8BE6B9EC347BED7AC15B9A3B0CAF7D04ED52D65125
D8A189FBED43BFD6030926C71F72B7A987BF50AC03D73F4DFBF1005237BD3132
973E3F84D6B44D82ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B4221438E8
3705D3D364B37D0664664C6FF0AEDEFB064F00B497832A05A92D139A80ECA6D6
1BE7D20CA221758E4FC3A9B3237A7A988390FA62555A9E577DEAF25254B2C7D9
5E63DA3C2CDB52AA2D67C338DCAE283988464821799ADF110FDF9CC1724D742F
A96456E1317F3DC6793441C02DD6D3D48852EDCB21F29D1E2E8F292789053625
1C4C146E5CDF7416FD53827C84050FAC61D928F053329CEAF29E4B7517D2F569
070C62EDFD1A807757F1BA59AA153AEFA7563BA235B92120F1415BBBD10B7C79
6FFD06A184A94E7EC42D6185036144A7951CD66900870A02A9F1AA05A39CFE26
C85E01BB0E6876B611F1F52A0407A84E6427C7A9D46BAF26F0F972C21160E9F8
D782B239FFE91B7943786A3D66BFEBE51A6D58C4D4647681DCD35D8765FC20BD
EC5407F8DF5F005BD7B52B92B00BCC6C75CFAF4E364C2B89E30AAB7C2E54DC3A
53877991059EA433D8CCB912ACFBF6919D7FFD1E7D88BB01AC6CD2ACB08E49B7
B58B7F38B0F1B9785EBFA634F3FF7824578BDCF9C61CE3385AD3C450A1FD75B3
B086653521EA59D674688BA92AA0919F24EFA6F496A2B92E2D3AC630D8A4BC36
980A386D32D6C6432B3DB333A7E9EA31574CE99C0F28418B2C296DFE6CE79E0E
A5AA999A41B766E1F782C885381DBAE476C6591692A1CDB0E12B57C805A361DE
451E050F3213501D78E7CF31CB560C5A8E07D9CBE4AAD8EAB871FFC3C4563F80
2F8C2126D13E46BFD2D284FCB74427ECE1C6410A2E1AEA0383B52E03A05ED59A
723E0682AF53EB8D1DC5F5C930D7229E183680BE42CB17578A385FC16166F62B
E205E0D0BF7AAFA6844060ADE126A8B85F28FD13169E6753CDEDF5290F5A0B85
60ECE5D8690A1AA011B743FA070C7BDEA9982810579A2524726987FB7668E1DA
0EB47CACFE83FAA64DB23922E6D3255A186F582313DFC9E5155B2CB8DC313B09
16AD607C96C3A780C70628CB20CAAEC815F19E380B0F625C0D1B4559303946E5
FA7FB084A72BEFD47058DCF9E1E2FDE0B485704F482BA766107CDE725531363E
2A6BADC0AFB73E3A018305087B8FB23A210AC67BDADB5E594BCFD754971552C1
4ADAC645D1FA67614D39812C7E0C7159847BA448A86AA9F7F22E2DECC457944A
22B273DEAFF6A653A4299F3ED7D28C342BE5BD5F2F5C180C6CFBEB957F817C56
99C783C57AAC149856997797E6E4D10E86691ABCD56501B463A74E16ECA2AF0F
11821A4811862A89E9AA54B607F97C10B84EED10CB2C662679D6B6920A0D14B1
A9D1078EE72B4E8AB9D658A2455BFD09C47EC378800D464734A53AA952D33EBC
5F55512F9B29250570FA4D01B82F01E0AD57CF68251764DBB79958B584DF4DB8
D04F81CEEFD2C4293B65523FD56BB8715C58B85E0D00AF422D7DB0EEA0F222D8
BF7C174B2F76FC3D4E5D0E2EC3AE6DFACF5082D3D93F8012852610A8FD318CE3
0BD8E77E437C58E105F073A41A9BC79BAA8CD35D656453B75C75AE71389D0ECA
7B9910CFBDFBA338B4AC8C56589E386D80F8632B18ED1BF5732BF427DBC97EF8
53A4E0F2D8D9C038B29676741DFED39878FC2DEA64A73178E28F27F577932C18
C53BAE5D14D35EAC9BECE4E681307674C82AE8A6F6F11D5147832D887B63D64A
8030C914E388A7FBE9450B7656ED7691734F381DD6EBD97BEA794A0CFFBFAA13
77A2D8866444FFCCBDC12931EADA75F5B9E42197631419D8C2E38446F9D3F6A1
085F650746C332151315424A6DD49659EE67BAE8CE02DC94352AAE24B8DB4D97
A84D74AFA4E0CC509000B04DB84B04602299E92F9EBDF08C25DD2D111DA16E8D
43E4C98EDCA77D7DFAD6A15C342CFCE710660A30B9953A73CEC1F02E18126AF5
6841402A11348BFB90C63DD572438AC5BAF20FF12952579C21AA1D4139F88B6A
28B234D563DFAEA0B42942EEAA0F7BC1DE45E981676A2636E4F423B4EA77880A
401294B10E0D95E20FD5B7C9D51D3DE5F4962C266D261B208E4AF4B6A33D0CEC
7FF6BA45FA964CEDBAE73B8F91695DA502167B6B10437BE1DDDCE4B5F3191EB0
02C5D027B198F8F30F9E4B40A761DB6A3FDD9BC85AC54FC15D87D6A3925D2240
9D615C8FF4D0C7D693DAEA969BA4097DBB4DDDE9C577433F1C34CB00010EDA9A
44443C6F98571A471ED7F662A27685E7DD05D3FB3054DFF46F1335BF93EC0E34
8EA5EEF4371B4BB4E101E0285B8C625DBA83A3F758B326F759D970922C8C9DEC
7E47B8480088C948AC7EFC1169C6FB6D0421A1A26DFDE8F354115D688D034E0C
4BB132D0D372401C98A7869FB5679E95052438BF9C31294AA2B9754329EEB995
9201A3E6432BC54F6864C7EDD05DDC27C7B6213548B8E8F6B3AA59E2984DA6F0
08CCD7399D8717BA36E6F5478CFE4034F0445B2A2AE32463B27D2F3661114403
AF7AFF3001CB41854E3C4ABAF43DEB4B3D080B42A76FEC193C118C819BAC238F
2E1402EBAC16B0054E80C333425629D4554DCBD7DCDB0FE1A91A095D32FCA074
073EC72434471F7AC7A4F6EE3E0BF0A3E3CF9D95509F47599DDBB64D567D7F8F
81B2CFBA127EADBF0A6C2DEC25C3304615FE60563E0D5035BBC540EEBDA26267
24EB46942930F722C525AFA39B8CCB68C68526C695FCDD345D4E041CE0CEA6AE
DABE9402A9F35521E77130C18BA1D8A6E125F7BC184ACD0DBE514C3E545E59CB
215D74AB3A6E15CD5B273476D267C3C21B60B3970A664561BDAB607557E6248D
D719A808315EC327A5C648155FA38A289AF69AE0588A5129139A50F9D7C6652E
7BB62F6D73A7695DDD1F31FD14D63B1B4E560408E9FB9090BF2EE360872F0F55
7C19DAB39A73E96FFB95151DF84F4F999DFD14A558B0800BB198ABB65F1B7D5D
0BE750DE8C79CFD35BB8A1E25E8433EC31BE2A94C82B2FB301628AAE6F9B5020
AE86A78126804EDB9F13EDE852536B69609C4F7F6F845168164B7E699E7417BF
E3612C3901D657286CBEBE90B746F3E4FF3637CD24ADF8CE069C482628864525
CC84835631B39846E625EE694C89B1C59F201D82858490C63A24D60D23F799B9
C84ADB727D6839E70960BDDA4E62EAECA1994780541EFD3F2A655B78635AA0D6
9E707DB2F7C7A47800790D729A28486D5ED8C05EEDA6C610A64E91B68DC9BC31
C104ECBE157F90659834D08ADD61F4A206AA6D423C3F372669CC58ACCE44529F
B6F902359CE3C8A611D95BF03B3120D2831A6ABEEB389E2DF0772CBB978078CC
C80DD95982A7DE083FB9DE2579013A92EB5AB3F57FFFB09548CA935135B8EEFD
F1E068A9FDE1DA7D8AB8CE51F5D24A0B3CBC3DAE461D4FA6A8ECDF5071D7ABF4
B35AFCFE9E6C784CD37A8C0847C069957DE29DD10D442E133CBF43C30FF6FF4F
E531BB2AD7A71F42516A3F7D84A64B2FE819C6762262192BC0B371A39A5398D3
737090B0CF18624F3277D7F689A46E3F5F5BD57D8FF865BFD92BCE299A3B30D4
74BC4D4611445CF0FEFE79837C7E4872239CBADD48A10E84B21A6FC55F6BFB40
A56A70655E473EF0D0C304178D08F1E64310431D9673280BD518487EE15B49F4
2B67331A8F4929CAD3477B250923ABB61AC8C764C9E0E0D8E2174A6815FE3754
6B8A1A23EB4F4242CE84BC3BA6BF8E6C410D1523412BA08CA4D2142AB64585BA
F8FC671C6369D89D418F3E6FD5DB13B85D8D8F264140D21B650317E1697149D7
BACECFE43CBAA66AE597E374D414F051D7420FBC4BCFE5D5616868AD43975ABF
F9D5FE5C9366E11F18ACF1BB40EC09CE91B35728409E73E9B749095DE518E11F
50167F76ECBC58E547B19F64B865CEDCF9B49D74867B2F00D18D96CDCAC144F6
66A4D64F5B0BADC586A0AD4D32A96E945DF434EE2E7BEDD3F81FF547F5BA1B87
2CDE3C12EA59785F1597D1785F53328EE87E0DC34FCDD23B7345DBD62E4B32F0
DF10F4020ED5673D353625EBE3C861D5A685B76DC472FDE8FD12C7A44017FEB9
EE34848904A73F534433C22216B4F44BA785E273ED52156CA23655B5D8D10DD8
2FF367B8E63A7FCD87BEF5A99805ECC5B7CC36B5F2A0876450BB4CC967E2E2B8
0BE075A76B2E7491714EC0BC71E4AC915C83C94E701922AA654C9D1D058BDC20
448A72DD85EFEEFA45BC0558BF167D79F40D91B43F424FE41266D2135CCCA4C1
00D3ACA55E8DC7CD01A6D89A6C9B744AF3F0CF419F0F09628410110734213EFD
BDE4D4FE8607A019DEB5337B29165AB04610940CE823AF80E0C907AAD2ABEE34
A947A750F2E8CBBB1ADF4867B9902B04001D258212221361FB3790FA3D2E9A21
94FA31D7BAD89E15DA3C73A7C87EFE5C41350085E0428AAAC16ACD14FB88ACD7
2A0FEA08382035E499B55B10AAED7A92F8C6D66A993ABAF34BB2D91B16A0375A
04D7D97750574794722AAD06A272A1969F2B151837C96E96D9BE4DFBCBC5CEEA
A5D86D418A6DC321B51FD9C6E66AE3DBF7505090AD0108660228B44E03F275A2
E71489FD07B8586D4E3E6F8D31CCB7A6DF8AFF8FABA6CB852E9A6060EA00F51C
3B9B2405454094BA402C2EE83BD601E2EACB6DB45EDF6BA18385607095E0D531
60D26E8E6EB7EDBC2315403A2F1E52CB4EB5F4607210D790190FD667F002E3E6
11F3AA2202CC4A2EB3C581242412C88173FCEADC68BCB17C11463A393EF2527D
7165E08E508A1726A0677DFEA66C75B2918434A39CBB6AD3570AE24E4589368B
DF37E0FD81E86F64F01DCBC15E01140A8A0CC90CCD8D7556BDEEB8ADABF75934
5CB86DC1B1973FDE08C62344F40A5AB6A8732789CE6481F66C3B0C74A92C8A15
710E41BDA7C0AB46CE6AF94BB1BD2D8569060C926AD723CCFD5407FDFC9BE9DC
92902EF7F877DF8FD3BB9742F9EFC88D77D02D398428332DE3A4358947F55CA8
D6189923A15F9322496F06A12C343A2F16F5BC057F8B2955F657809E0BB1B868
367D66B64AE91412E8FDCEF17915597A391597A2800CD0AB229D34A87E50C588
C7DA814E3CB666FF60F8E4B8BC3A7412D461BE2D7784C93567F0008AC63DA946
1252DC66FF35B32791CC090002935036B6052BF66DB069C4A71F63B6B2C61D38
1CA6533E7E0025A71952451E44EFADD7605AA3CEA0D81856288366086FFB526B
9C4430B67FF9261AC03D6FADF97B4A028D632B5C7229EDDFD33475FBC12D79AF
F3710D80C985C007493DDCBAB4FE31A35AB962E2983CDC6A43AA8070673675F9
7C96A8BB66DC3F967F4D7A307AA3E73751F76E40798122CBCFE7C1DA3721CA4E
F9CD531A3FC7D50C55DEA7AEFDE329AD6B8E9CBE544DA1AB07C106AB7F8A71BC
224DAD257473CA072624C32AEB17656F5CB59A53B084A155990CAEC8B6DD677C
94115014238B35F1747E6B4CFB64F57700EEDF03E577CD4A3DBC6A6904C0471B
12A6485115DA216B66768A47EC804E0108EB1A4B683E91E325FC1EFA4BAE7B6B
2515DB63BDE2AF699D42773E1ED2D3F73334CAEEE3780D13A9CAB5ADCEF28D31
BA101F317854E9444EA8F0E9771EA06CD9088663135DFF8E51A9AC94CF1391B4
9726E76779AF1776DD8EC1F068B1D9433100472DDB05F63866B89CDD961936D5
AD5A775EF4D8F19A3CAAD199F9DC80CDEB68A2ABAA352007B0B3540FE72436B7
BD69C0A50110AFE506510A0206CF2F792C8A080EF8A629C03CFBA6808BB06DC1
4D792CEF6481C2538DB6DD789F9B9728638E1C9429C3335D4C34B7F65994135A
B38EC4298CC113744EC82CAE4747FBB566A27F41573CEDD494F54696C5FD44E9
6096E5C85B4E8F937C64D0685C3E5992ADB152E866C4C9F6E40661C248382D46
CC56D3D19FF1CBA64B8010592673FFBD063975A0FE466DF74C817346BB6FB569
0B4FEB282A9A34383ADC7B5EA60B1E1DD019B536E1AF87E0D5412304281BE8ED
333CAA3F4F3DA20C64A8A6291514BF4F523A761C7C1EF810B3D05EF5A8EC33E4
DFE27F5FA6C01BC57BDE0D385104C7C0D636AF8783E70A6A33084BC3D7E394B5
52BCD3DC8F3C1C81933171843DCBA79AAF10AF7D678167A23CB1F3EE275D8163
BB908B285961320C6A46E27B6DD8FE1C192C9CF2F73095B1D85B11DAD58F6994
254A87D4C07CB3C098AAC5E800D14E07E34A81C991D01D6ECE3F70E622231A1C
7AD95A173A8C38E4E53629EDC80BDA8987D90574FED6DED2E94C2036D4513A99
38194F55BA368CCC9F433E6741CBBFEC80F134EF73F63DDFBC3F407055A86070
985E28942478B0D3E092E82D9EA9DE9E3721123111ECEAA864063B65B26A95C3
03D338FB1479DA3C8DE7B60399A17097D29F7C6AFD76D45105FE5E81A7EB8419
6B5CD6B64E7AE1D2D6F9665126221DA6C0EFA1F30B91D0573ECCCBB08273A860
6B549E7A5A5F78F311B0A1F4F3C127BD2FF4C7DA835F149270FE3FF24DE68A2A
81CF8795516BC72F8786C11827B428DF4A76B106FD55140466FC59386CED7E98
01E53586FA4444C3B15770ECF016A7E3BE4C664B5BFEC1AC8ADAA85EDBB99531
EFBF237697A4E812A3028362459BB5E3827B349924823DBDED7351A3F497145B
2CC885DC3EC194D2733FC5D708B1FB273154E2A260ADB2374C32B21BDC20F82A
483A3D15CBF684593AE746ED4A7AD52128D063729FFED3B5FCA6FF6D2B9DDE6B
F2D530A731532A3D817FFE50BCD1C44DC83D12645EB8547C0EB1542055898E94
F16056C851FB5DAA0CB3E45730A1F7C1A028EC61BA3D97D71D671C3071E95A9A
F15729B93FA24E02767C7E6B5F0BB1A714C5C05C558327FA5A90F3FA49935196
919C90F2C5DBBFE939F66A4F336A95621C8AE6707979A016C13B604FA6B9A7E4
05CC5D6441C565BC3D5F37D61CFF53EB94071CE62555320C95DC4A00D7C5A983
9BB587097C5A03506D560A20ED9EBC51C609674344DFF2E4E6B3C7AF4466800B
921DDB1B6CCBDC51BE12825522999ACB6C7F81FE209BD4C1ECDEF57B9204663B
D31F864718B8802B5F3D9A5295F112FDCB0FDF2D1176ACE879D637FE60197094
044E01A94963189A28C4796BD890B807DDF3DAB9EE0F5CCCAA82653B7F1BFB27
7CE99B7F9FD1C6E15F89118E9D21B516CC5C19E9A0F750517AD4CD41CE5A1BF2
5D929F33FDE563304B201E5B0887CDBC926816F804E0B6D54806787FB46F399E
55BDB961471E09EB919DD5C7BB7193E7FC933BF2D1D1AEC3518BF728ABB2A570
502E4CE3D61F2CE12FDCE6CC81BDD5DA632FAD8E0F22180DD693642478A0FFE9
22E82BEEA0B14DF5396F8EA6BB6D0949A42E4013431B7D81D89117C02E993826
8F205AD6C6EDDD647F29AA534ACFACA5518518BEB2FD875ABAE3E6DAD7496C03
2B35B5285A36F01BD5C26C776B7D73373B1B6F1E2D4CDB5CEA2E3626415E7EE4
C1CEAB2ADDD1BFC8EC7827DC4CA5CF5553B174CD09885E52B8BF0CAD0C4E49B7
584A0321E37207D8E4985BEE50472EEDFFFAA533EAD33DA7EF4DA56AD49B1BA1
147B336AE5CC0C86E690430398BE12904A45EF00F0652A031F0AE2E69AB6FA5C
E0FABBF3A2DFA9788E4E074DF28B66B570B0DF07F7A03CB4F2A7285B6D445DC1
6B7BCC3CA6453AB1010B1BB59BAAF0995D7629CBB40FDC22A7458A605B88FE5A
84D9E4B8C168BCCCD093A44B749BE40B111F6D242EF7010306F2F8E4717BBB27
70FDAEF1E94D3489BAB794E136E1810481012D4C246F0E0EAEA5E2687415B090
5487E9588DDBCAE6466045A33E3A05AD70EC39C288F234ABF6FD33BB09822E30
B9399B09EE9ED70A9195C232B27473F79A18FB5F88263CF6958E2F1221B6F83B
F3EBA24F4758EE9EEF6685E5E1C784EE680C7037B3592CC253B596D84FAC0882
CA04402220A1D44E86F3E5423817F004D2F9EA39A6C67797717B623DA4EF7F4B
54A573851CE95ADE4AE535075CAF9847D9F2D47212E9F8643B5B5E7271C908AC
27356C50FE6F24DA69E3BB3063877CAED802ECA06A930560246A43A06C19CE6E
79B63831B9F5472A33F62ED59F72EF84A2A6A5F3B83F63A54A7363D8FF61709E
753BD437395DD83FD4419797873DBE9BD85A8BA99412764D5DDDD8B70CBA7CF4
1AAE5B56996E25B9706C40E30FDD82436FEB29E12D9FEFD28AC55943A1DFFAF9
5116045D6DAFA637CC862E7BB133E68971CEDE374173DADE66C92C2C18A04DA3
57438103F07076E592F6D51108D6D36B0B6777DFE87B6AA9E216B671D47D4893
BF0DE6074F252226BC4C89E81C4F72CB7DAF912BD777AC8E72D1D8B8D85BC996
48477A133E779DE29A36F4950FD99545AE5AEB4DB6F9CBD3D6037A861392E053
A882F313D6E98FB8233143F5320CBE6569D59A21F81DDC03F6783550E36A8BDA
B2B0EA1ACC7A3B0AEA722C887B2666A8B156524BB9317459ECF09D16F2545655
983B696E4E97DA41F3BB4D6BB052C819442D70A518F4273E3990CDB79157FEF8
59B34C81C3E31B8FB0D0EE360CCE09A1E91843F21394CD9F3B265B669EB53249
C73AF40D89D80DBFD569F1A9962D953AF02C2F40445B6A6EFDCD4EEA73A7EB5D
7D76AFAC786E12CA379D4C51ACD32E12B58D09C3592727B560215909E6398528
F438838CB162042C9785DD15A8BA14BDA4D815EFED9EFB4C0EE3C4BAD8FA59F0
7C66A4EF2C6857565B4A2B40FA66571784064E11630B8179F2EDE9AE04C87CA7
436F9A34C708B76B994AFB30EDFFEA61EBDB7A5EC92436B344016EBBABB48A30
982BAD9C63BC0FE813EEDF071380B8735938420A199DEAAFB5975E7A3C2390F4
414FC2472990ECAA100402C629B8C353C7639C28C5C08C868812CD4F4DC64539
86C8AC7B8EF5820F1C8977187B6C603464FA69E1B9607D73C357F715592A87E3
6BE8B61D04CCCD59B4DACC0EA68BE63610BD23DBDDC7CE46BD3C75C4BF212141
57F85B026BF0CE174872D938A1CFDF11B76353BBF8C479BF47D69C87ADFE9DAE
B82BAAC4024E6F1EAD9CA43D6FA58593635AA8AD3168AC6EEB21C3B2B5C0279E
53749CA0A1125B2736DE231AAC274E791F5ACD4C4FB87316BC32E9FB0DC52B74
0525130ED4C0270C13737C7BC4FDE74620BAF9CAB96CDFDF32278C9699AC88C5
3AD9146817AAB41A82A2349F27A81297EAD34C244FA86B99A908A47F92FDF7E2
0AF1ADFD5DB9590133E632DE8CE381B18F0986D259C6DA12E0C29F656938460D
07781F4F5D06E23FDD062DA0EB2A20AEA90E594CFB5C4829BBC2AC58B1812385
A058AA5E547599AF9455957A00087CD22D9D2452C9080B84EC56EF04D7E9C479
8C16BBAB370E0F959AC3A19FA9D03081DB77B99133C6D5FF6647FEA03C1526C7
276CAD462E79846414D9A3714A12E4B14640CB16839260DF96757CCAE6E5912C
A1471D7E84E45361F43EE481024F32EF971CA71C8403AECE7CE8C72D31132063
44F76FC88D224236815400E2AE55F94865B4568E9D55764705C720F1DE8D85DC
D182B0E16AF48637BB720B9D1B7E6485374B69357920BEE4A091E19DC889AD6F
8491D3060A9FD4F99F9F79EC79E481551170C539619089FF27BC2492A908B7DB
83FB4334EC1ADB341D80937B3A8EEC2A2647CF87661C0239920B64D86C103EEB
B77EA5E96C4CD73677D9F5D6EBE2595BD0B79E49A7B20D9C4DD68F21B9EF201D
482A3248770E48274DA713C2DE2865BD0013F85506A55D625BE6058AC8372138
CA34DD5978DB1BB5A4AE93507DF6E3F51070452FA8085DCB5285399F2FBB7676
7E114749C3E5340136CB42873A4D8B851D3FE8B9ED080FF900FC7226291A0101
3FEB4CFACA086A5F0D5FA0753966A43DC3735B8E998E01A4DA29EDF92C7FFC80
F265A68FB00103CE2BD07B12C140DB826EBDCDC60763880B19800BA178D5C7C6
E85093C9C6A1F43A787CA34C5193025A3115B602178C076BDEB5C4230D6E615F
5E30A79F2EF4AF8A931A28C389A42EBF8797887D9E992CCCCB5AA3D779473D8C
0405BF4CE4FF21CA3F2B0776CC77D86CAA7A05E642327B74B616A836F0FC2EB8
75E75C832834234359A1B4CE88A8061D26C2B55954A9AFEDD77AE53DC0798189
6CE7F20B8A2B859269E3B6817C6CF35BA0DF456D84CA7937BDC614700FC5C526
25D7A8ED7AB7E2487E6B15752536AE30CEE5DED5FCE347EC658355586C5B1703
025800DEE58C3A1D10F6D859F0F8DCB004572F1F2BEF2B16F0711E6A7D8A2704
7BE8B891155ADDA8E704EC5C6D0528F19F332AC637C01C0E59A8EF9E500F1B43
DB9BF0EBF9620E5E3DB7719887091A2507401F33FEE9E8ED610A69A06968822A
3B68F5045EB2FF2554EC09D77B8FF5B4F1E0F3B8D8212FF6E18D8220594D9F8E
79E1A02EC362C66754D7DDECB9FA05B41389E344C097B0B1225079517B8FF568
D564974F01BCDD66046E562DBCA57FE29ECCC708AEA524EC01E9AC5C2ED25F62
23D3297F0CC95D98FCA59D5AF64CAF4403D441A28DD676880462C44D4166404D
D5CAA060874D81A88874FE984B28D1666CA7629203C80671A976F0AF6125EFD6
7C73DEC748DDCD61E57EDFC011D5BFF1B4D7C1837605BF5696A59F845B4CC1B2
7DB7974756CD7487D86F061D629AA4EEA004258CD2595EA554E06CCB47AB96F3
F42E0CC7560FCF30B42472430400B1F916BC7962D6F2130B931A51862B83E445
0E4634484C43876217D01D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE064BC47635CCA71
AA72328472FF6822BD62A82B7765A73CA0239A9E28179AE7740477196602ABF4
2EE916B80AAFB638D00C1FB2A1EAFDC4516C7EE3EE4F5D3039E70EF3B07915B8
7C9C128C2ED3C27FE48D27D39B41E1ECEC46CD2209D760D75E743AD13AF1E761
A8B7F996ABCAEA43645546F42C87F6909258CC74419B96A39D6DA3233834894C
C60B03F867B6ADAA2C18F60040A9D8E70BAB12221217095DFC57117CDEB536FD
A09E11787D4F7B448F88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C350305B273
03AB8B016B22376C8C335B8BBA0DEF974EB6F862421F6F37283AFD0F95C4B889
F3E304C34BA795DF6289C9A8490DF490915711FCE65F1E5C1E4EDE5B900212A5
FC7F4DB2C062A1D97D9F3BEB5DCE14B6D0ED3BE5D5861FFF3215FB4ACA8A2DE0
CD63FF091C409C919A7EA8859976C26F66170C35D1CB9B610BA4F332253C51B9
E6E27EE36F0B6F2B961CA6E640A65B8CD159EC22E6191685FA2BFA577B5AB9C6
544250D9C2985BDAEE731006C18928C6761C148F32AA97EA454B7FA5E132BC17
2A77305BB771DB267C0AC6F940EE4E12921A038A64DBD11D7A52FDFFE8A2AB92
BED886B0533C784B8A8B363A08AC7AD4E9217E2FD44B647C292832129FBEEA0C
D3CB94FD161186FD0CCE3AC0C2BB9A898025EA873936EB6940B74DF0013AE9DA
79E2C0A15F3E1E94C13DCEDD60CFC0997AD00AF3C2140D049C8004E21B98FAD4
16BE2552F12047B221DC381F56C09E6590CE09C10D1CD024C5D8BACC87E46323
19B253DBB32F7D4C56535C4452AF3E1AB29312CC2DEA85BD39AEA5C274E42504
62BDA42DD982B05BD21380E6EB86CC5C20C4F548EA0200CBB6F75A14E8534F64
0067BA5FDA229690C62A3DE8F1B66B6686714F62C9933542E039E319ADD1247E
FCAD78FC976C5F9A50158706999FD7CA60D2E022319734570F46E6D246D604E2
7CC427B415DAFEC7C78C8BAB8DDF9AEA4418CB27405613AF6A8898D54705F8E4
540B96C252F33509876FB7DB62D7D23E5A5F5E1D7E8116BE1D2C64AC0ADE48B3
2004072B5D8A57689F926B8744B8D5EEF58BFF3D274D1DE6D33847E2A638E0C0
BF311B1A7616A8D92DD167F1B220A35A4AEDDFD34EFA03BB49B8FEB98A96C113
8D3C088BABF1B153ACF8DFA6B388F4A61E14C120867BBFC276169DE357737949
57E2BA5DBA99DE0C789D121B1DAE0063B73927CC7C5C10E42FB65E13D33D6679
5ACC5DCD875ACB5623D34DA177B1DD37F84FCF67F3C12EEA3C77C634D61F9A81
5D8A27A1DD4DAFE4CA472C79C875A9394A9C6CE0611606F90DE8E9D583A5988F
6CDAB81EA10DDA0C81B973478D9C85029C833B0459C3DB1456CBD30993410C0E
FDAB2511EFE05DBED355CD577E2E8F8795B58B5E505F718707F15DB2DDA88F0C
D48A0A552955F9268A1CC9196A7161D400F5DF9816CD9848006D324B426F253F
3212CA11AABA54285DED8BC91B66B2BB3BA9493C94D860EFF8EB9BA7E8504849
2E083968C22FBD3944D162776B9A9680FF3AD805AA74F6559A6DD45EAD937A10
23B6866780BA565B1B487840215ED98A8CDF069387E4FA50DFA729086709CAD8
F9DD76AD45ACFAAEE71762C0891333FB62216C8ABD214D6F84B5DA778221A3CF
A0DBB8397173FE341A12BF570C4F2D1BE311FAA7BB1FAB62307DA6FC58A60A2F
2CC32234F171958DE9E32687B6BED27ADB1EFBDAA29C1A22FC56AE76B0652764
B2F4AB03FD01A2662B879C2455A1A1A35DCFFBC0466A81247D0D69510D8D7D36
058B06F3AABB121CA1540BA17F0A43DF8A4EDEC37C7C3968C89EA69B3DFFE6E0
FC453B90FEA4A50B0356EC46A4E7754D3BB9B25BB9A929283621035E779F46ED
D935018D616E4B6C65760218604DA7671DB098E5951AED115AE9D4C6DABB42C2
035536E8F7D9787164A60BC32326C2D36742C0D71D21C63AA4DECFF5C797DF57
7C4FA8DF7125193E2ABFC8962C81205011FD540B6C1366F6AD6AFD1AB243502A
86FB184B3832FB1027D141234E6CA6A30546260103133D05A38C8ECB5389BFF9
AACE0299E84FFD6194F127A439995BF3F7FBF49EE7ED496993160FC02B552742
16D251460B2E2BB253BCDA0B89BA6DAD30B1DEF09CFC93E408D2EB9D54121D3B
7A1A6173B4A168A8C3603A54D039EBF47B0938CD3127CA9BD4B2CCFF45ADAA7E
204114E5CF343E505739E18A17A489662F16CEF4FF0CB4CBBD4D0CEEC2269290
90A98B942001B56D54CB65DDC734C85978CCA913C62D663540462DC1B2026209
DB8DDF5F93985BDDEC7A17C057ECBE98ED85BD56300DA794ED56DE49D65F468A
51513C6C0C4E7C73BD8E43A845AFD0DF8A3AA1BE8F7AB1DBB27CD8BF8B107F22
DAA867CA22723CAC55F4D5236628739606D8EF5ACD55D67C36ECC4A22BF19436
2C862C904C6646E450C3BDAECF9C38514538F9F0536817398DC030E0275051E8
00D08BD92FF2BFB06CA814AD933409C99883AA5D858AD27C1FD642F61A533698
803DFB2A20226E582EFF3AD7DA0A9804A8F1FA82E223310845A025D7B189A573
6B5223B661222CF49872856674212EBEFC4A56D4A62930DAAA559BAC06FE38E3
D3AFB6B950C284946E38E8CD1D7732019B86C11D799B79F33BB09CB6771F6378
5029F67FBB2BC8E9AA0014C75790B06C375ABA39B49AF0DD2A35EE24A912A8D5
E2DDB74CC4C42DDC9F742C12077C473AEFAB9D2A0AB18FCF5A40C9286D069839
B0DC49FC8A2E0BCFB2A5224A20C5C14FE0568AC285C0DDDF404FE29CE4952D5E
2FAE0C3BAA7501ACAB233C50CF105D6197989455792F63B81C87AAD19F4E39A7
3DC26A53BE3684958243FB5E2BCE74816877C16C130A46E1BCD0BA0BFD29410B
E0E15ECD8C55D98A2BDF0BDE60C6FF1E1D166F619543D6A3D1ECDDAADA307C2B
5CD23A78B54B363BFA1E0A7F252FCB092F9A0E06E6873997A3490967DCFBB99F
FA480FF4AADFD07BDCC96F4E13E2A020BD8460CC7D8643D3A2459C318A4027B8
176921B6FE6F208565573E89FE3A8E5DA168E4926B8489770DB1E286049CBE67
B2CDE89FCCA385BDB32C72B14A944ADD33834142D478550F60D1094963EBEF5F
85625D7A90C728417D6D39C02443AE2D9A5D1F0C21A65C82424605277DA7EC4B
B7E909BDFBA2E6F6A24EA2637C80EF0080D6FB660D65C6BBE76370F0389AB1DC
905D2BEB739F117C0642A3443674A4D19A5B037FFB99B7EA1593D47EE288EF7A
4D2DADA9C29665953647AD6B6D8268A885685F15D56AA2AD384B7F6AC92C7F83
AEDF417E0B7425A39F49A47A3A698922C8204F2BECE5E6ABFA06C7E124C88F55
EB5AEA0A3CA8269EC3AB79D749F08661A00D79CEF0AB1CFE6E28E7042910F7B3
9612981022FFFA349891F4E5186BDF084C5C8F7A7BF34F1C86D862BF33A46509
346176931FD978741654704A4035A1E7C8527662CC0F00E35FC8D748E1071C14
C88C1769B1A41A1FD97FC46BB3CB958F630459650661A7B4A0E4963C9E9FC0E6
CEEBF7774F40AF36C71CA78CEEB6BB2E3AB2F6E297EFD86B015A84D657171B12
AF2E7523DC4CAF9D92289600AC2CFCDD78A8106CE6D993B21D4555D24BA389CF
6EEBED581868C0747DA81A81F48818320F5D86E542AEEA4E64F0C4F1545BA8C7
934D100A5E37A94AB69AE9538BE68FBB57D62EF5FF8DE98899A5F1A04019CB16
2F7BBF120CDEE64257EC3B30B5EF4B7F0F0EC273B54727AF998EF726477C8101
3C8ABDCA62FA6E2F80DE35A2338CD8D5C4A23264CDFD3ACD21F2431580556CCD
CCF71D363EB5DBC712A8F962F7879D063B8B80FF811036A99370C24B1FDD18F2
0E71A852A83080567708AE25C289AA3C41ABC57A5BD5CB140E02C5A8C4AAF911
3292E7EB5D8B7370D20FC490E3A629590A01C82AE5A439E880B3DF30CC96F57D
799B6BD986A2913EBB47C6D7A2A9FF37198A475516A490AA32FB1922E8E2BC4E
F70F38D4A733669E1D9F459EA1F9FF396F69F9A313573ADEB344FB06B0683133
5F7BD2D74C3C6A019DA3790631E360AA6DBA1EA79537ADD7412304B12E8C5396
F8683E51BC4D0556BB410531A5B2A5A6D96F9F22211F0423C01A13086915E0B3
5987B11E22EAF052F0A5F6FC2B09C6C9E45439EEC1ECE096E6E5B991725B7948
09774ED03DBD95A913C12BC502D3302BD8EE54D2318C6E6FB8AAB7E9ADBCE59C
015F68BEA5EEA4B432154785EB31F8E4DF3CA6E596CB562C98A8D09FE551F142
955B8EE5A161A4529B735031ED0B3F054E748530C5E44CC3639DDD83358B0A1B
6D3E93B89F30B32D39A54B987272040670E0D510514D64256114CA0E06B4DA99
6CD021FB5D44F9B67289658488E28072CAFD77E895E36ECD8881C06314B93496
2984C7FE400CCA58E6D19A5EB5675E54C76D75317812C4BEC982C36DF246D820
C031D718CB10253859AAF836E53847502BF4A104BC474A986B4DB68E5672F031
A53640E45FADCE763ED9006E468579E06CCBDFED3C5BED02CA07F96E3DB5235A
B9484989D44C6C7F5187C27310CD065D11C4A7D5A010473E8EC9494D7980DE02
2A09211A182704E0AA1EAD468E25D4889D34B63C118D994E1474123DA0D74228
CA1A581B8D8BDDE31F6432B757B5F1164FAB22A39BF3497AC8A40FD502ACBB13
9DD459FE78986211F8B93510BE5EE3154E58517EA65B8F73820F99C141D9E977
2ACB63733222D0687E1B2AF3259B1728F86AE023B2F1C325C4F4028D5D14E3BE
099597848F87049DDA4AA688DBD0E607C1D2C5D1CD98F613BC2E4FB25454AA38
231EC3ED25DAA194B009096C46253EE98438FBDEB8D598CA9D7CBB780250ED96
612FB42242CD908FBE9B98C77FC1234A43D97D9BACBE2279A5E68C0C192E5E14
393B889F479A2D37240C6778E69BB90B0D130A32445972FA44213D14B42DCD2B
B136C75DE0FA273D40D06AC07B567DA70D25CD270054F953CC57932BA4C9DB0F
1585DEF8C6BBEEA878DEA3F2591FE6B5C9AD96FDC7269B6E168811F098EDB80F
8AA0DF34FDCB713062CC81D4262A90790CE91228EFACF816224FBF1002499C1C
954F8C6B80667468AD643A84272C0FCBEB1D3DFE5D3E32AF013E6207BD0481E0
7FD0895C9DCC920A5FC0D620122BE1A22470D4B7E7BEF228434B4B529F2FB879
30A6D5C0E60977D68ABC8FD50EB703E99F0C3380C51DB127E0D7A7B07DC6C57E
CB62C94DF9A89E29A679A18CC81C5822E711E9899A4148795C932526D59A97FD
56BFE696D2C25408D362312C9156B30A6056497FD3351D7C0F6F281460A76424
A298E8D4AAE228D4307DEAF10CAA78CE0B13629B96AF5CA2C70191B24E20E699
454570FB31850DAC38AE12C3F2968D2279C49A48C6301E226CFE1D3E3239CADE
C2A1F291A5B9076094B5B7257141A512311094E29D5FBFD44C82A66030D729C4
DCF2E9E0ED2A8A24A32CADD00CD68191E3A718D0D606FD8A7383F068BA765099
A86BD2E1F4BC83231A84D8BF9F4346EE7C154C34B7DCC334647E992D7ED74ABA
7D7F6D429C04CD1D5D807ECC4DAD98F02BD0CF463BCA4DE70B280622D99C8FD8
E295AEC158289FF4901504778CC6CAD142D172F4DAEC7BE571C033C54E23BE99
C97D290292DA35B180B5A4F17FEAB6088CB281DAB37D11924AAF00565E3B8EDE
8E40FDB4B19999974E751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5759475
042A9C413C838DBAE11B315A3B6B5FC1351BEB31C02D57D654286D5C2C2D8E6A
24B34217D101BAA3018126D3AE5EF9C240EB792EB349A684547B6F5E170EBC2B
01B6A736712541A117E690134A5915D13634B978B88CB80B61BE229F35324501
AE0F98009DA9ACC5F02B837E58A290029A43D2C713E325980C175D8C20994382
EAAC6F39828B171915FFF4545D5E6198DF7C495B95A55F5B8ECF595927081BC5
306B48BC1B97A9612FC1D0DEDA00DE6700D6A10203D03263B1C28B26EADB953E
D292A4AADB0F4BACFE7CDA4FFE64DCF7591F16BFC51EA0DB9B7B0D510C607DB6
DD020C5B28A575C0BD6C0DEE6454EF9785C704CAB865C9D0D0A7766319E70A0D
FECA9314987D0543B39FD11555CED84942236625ADDD5AF77C3657B8548F0D58
ED841F8534BB60C7875CEC5973F95A8C872458B63F686FD099510549F2371FE7
807F8382AD9D1E7E446E73FB596F289037891157769C8BEA7D15C98753C1756A
D232C5560AB68089252E8625B83749A64A7FFCF96007AFA65AF4FC264389952C
838623B68519D11ACB5A55AF22AF3C69EB98F495D9B8FED11367A693F8DFE507
509AE73DA2EBF55BDFF2E95DFDB1DAE428DEA1143295B18EFD0A4F2897035B5E
79264B3228A308492A8E1EC74E8DDF827CEA28F92968376FE7063FFFFEB8C51B
57F75ECFE7238BDE6EC5BDFA018A0355BA8777786C48E71D0A4EC6220EE0D940
C4D437A962DCF0CEEC7F65AB8458CB439BC970F973826A3AE77CA32C8DA3FBA7
A26D8917B92E236864F84EB587C94C9D816E90A4E899E0B7D2B3945820A746FE
A6CC146B7E2570A68ECAD48237493673C23DEE9C22101CE360095F4A44020383
51C81B197F61026CE0F20161A57C927D174FCED437E5B0FC91AA85E753524300
2B925589D8E914E51606308DE0EC6DB98A223AB77657E7D99CEEF4E3A931BDE2
FB1E108B887C371C4ABF6AE65938DFD3E50A17FA86444BA37F8C8FDC0B7ADCD2
769AFD6ECE928C884913A26A663F4469A633B369EBFA1BABC11BE9A9AB2A4E9E
00C2E293DAC9C37187E1348CD616703CAFA5F99ABE792BE90A2208F6D67A90D0
998BDB36D0A4E5CB92F27A48CA775AEDA438F22298CB9ADA9DEE54D002E34BD8
3FDD62B0F5C75F685A9D4C360433DB6E8CD2A36017216FECAC5AAAFCF750425D
9FFE2DF16A53E71013CC1D31C1A4A90DEB68D4355CA0444C480FC2B7235A3413
DD5A68C9C68038559E3F5CE966A6D985AAFCF15831B1C735A3422D62BEB795C1
D3C2798C5EA40C1761DC98948588ADC65F487A268F553EB35A6C3F75FDABE73E
E9BC87926E6157D07DAD809D2CB541BD2980C9B6A79FF1AA5C493075C820C160
BD92CF03AD2FC298B05832107BBECC4E1189B5B0F8B5F960989B2321DCFE4A63
35B46F4531AE2D12B10ED201A9F12A88329428CF2DBCA8AB997DA93D783BAAB6
14B8199AB253EB68F06E43513A6953AAA5012C04FFC9A808CC1BE129C563821F
BDAA71A9470676D921F57A10A9F80A40337338FF4A36E5036538CA1D9DC34682
A4586A9AA34E8435F64DDCCFEC6EB3260FDD299898AFFE19E8C76C299214F50B
C686E00336E7C70D3AC58AB262320FAC37286B4BC65733643B43221DD20884B2
83E9263272F99C82B2C6EBB66A0BF7D5E97235B1FD0EBA1AAB173D8163B673D7
E953D23537C4C93F470E34504AAD58B29AACB1A73C262F33633439786EECD6B6
B4C9803A6954E78575D7039AAFC441169704858B279E2095483440D58B285FCB
96A8FB026E2AFB50B2692DB2D4251390843438D4CF5C558B7C0821FD576A96C5
41D7616E6DFEE95F20BF0ED008EC599F2C729084458B23B7B59AED7FB509496C
F89ABDF64279C3F97060E2E9F17A5BF7ACE57B7118169DCB8A11CD2C1A29F428
1D5658A463FED5FD2D21A74CFB21C2B63953308B5640B2E1F1226A7F3FE39000
1BBCD7F6EBF3EE387E172B402347C8CB9A462529294F1A7D9DA2FDE6A9CEBC6E
082D05A249C1CFD53EDE0DA71187EAF59E67C9ABD207EECEC36E39C79B8B551D
4B5353D18711587C6ABA081FCD276DCA8A92F22E3DDFDA20469F1C97FCDC65D1
1B1E55ACEB487E520CC396F6B9BFA35A0595A2C92D40699DDA4F340A7490361E
FF16080CACDBF5CFFF138E5F474B765A30B913F342FA7E48F433F22831937D7E
43F3DC66F000179C41CDD34E703F93F4A864B532F11E11C1CDBBDB9BC99CCB68
D5BED1AC2807EB52000FA94FB9A676B97C88A88C958E6323853F859392F85E00
2EC38F1A32ACF009F3EC1A0FBD382F89410BE287CBA455EC22CA28D69A6BC12E
1068C0022066887A38B351A1CB72768981AA641F95F1B0FEF91A375FA302EDCF
BE15E9BCE206EB062CE80BEF0B19C5B7EC159B5753A224DD45EF18898F910F38
FD25CEA5B6C83F112A0127FFAF8B1041F6AD9AB4DA01E942C50968AEFB7F45C8
508D8EAF9C6528BEBE41DF3510B136771E91AF9DF5FEBD4C077811073FB797D2
A05EF31C95A950853C6EA76CC781C2F928E6FEE8E877FF83DADDD463959AF144
20428F04AAF290F8FFFDC68CE7E92EC99513CF6776629A46468404E2C57DCF3E
B9EBB60B05E1670A7374B233D62B296C6948FF3A89F80BE0F0479644696B6D18
39E7DA48ECD169B6F47242682B044B6F2D1A2E8D3BBFE5108CE35FBAC5FA3FB1
36F59A5092678C61148F86F5F5CDC5C944756DF651DF677FFBDADE1DE463B6BF
D4D14E01C6E0F63172A7C029D6FDB9CA2FAA3987D6FA15F395DD18F8741C676E
A9039FC603B7BE8FD57815BFCB2CD368331A51C5378299D16031B0EBB17076D3
62F5CA71ABE4404386E05A338141CDBFFA5109ED48843119FCCA90D78E299DDD
A34E11946608C87CC67AF325FA239AD9D463681F2E9402B935F1251B16E12E1D
E1527CFC2E67DDFB88C9B73EB600298E329B8493626F786A20316B992F917A6F
46084D2D7796D64A120320480392538A78719AC3CC6A7474FCDD7CC8F3B2C634
3B4127DD7D674EFCBDAE3D9A5C0BCF775E6509ED5ACB21E9ED50FDE93591AD0E
84BBE95DE956B8BEBEB59933078DCC7D1F9B1D9AB7C85AA0B1E331D6B0645784
2CAD5768708A64669FF097F0E3A31798943F8EA7DB5F04D72FC867A72CBEA16F
05A83D859576327C0AFAFF5A9C35500814214C6581EA2A38C571746590AF4203
090B2786E5848D7D4D1C7617EA9B5CC665A97541473A8406CBAE239681677136
4CC604446AD22ED5AF685C15C52A16D19A8BB0DF5DC12EE770303B42311B7C07
C17737874D9AFDA42663FC92BE7B47E91F8F6E5077B977D9279B2BEA5B11DDF3
426D25DD4DCC86C93F27C741B8403D6E8F90041150484E756DC763006110EE56
4B1697D6A54809FF11D43A9138210400C0050FBA3A6DF4E7A0227D60315A57D6
0BC27BAC493BA99CB101DCA31F5515A5F43AE32528BC062ED1027C7D902AE2FB
DA9C7EB33BCAC180A1B5F9E84337B5D00B9899B3EE43660E70D22DBC9EE6E528
B4FB9339D4458FA59EAD4FD168D373CF5FC1B832D55382E122A9055C7041876C
98A376C11BED2B31A5D73AAC7C4ACBB6835AF589D7E094DA3748777C5B2409A4
7ABD8A80252BBC6E83621C70E0EFF7596C7D106AB4A2CC33767EC807079A2D79
B6F5335C87846ACB95490E3F7D6283E402E00C47537F2883DD8E3991E1B161B1
E73FAA162A86059FB00090C353F464EAFB98D58916F4A4D09732F1FBD0C9B795
15D079920FD0C1AAE76B6412DAE3BB99FEAEBC614E2ACA993D8DBEDAAE2C12C3
E377D57BDF13BC839C44E374C3C6E9CE6CD9D24E3721F6DC6274348A88CC361F
F06E5C3D03C2F435A770508F291AD36254F38DED7C9383A224A33CB446DE0835
9B7E9248A22E1B9AE1A28B1438B9883B8C345743D405D0E50A525C31CEF953E2
7DF1626505C7F99B6A0B981D4D61E82D09AF25F691B5B7896135033708A99612
AEFBBF22F2042D9AF2C4D09CA978C11715DA76C5B44609562D0C4C3F257760DD
02CD3FD1D9CD59C774E86C19F232630470892C64AEA8DF3B57E949466A36D767
349D2897C241E1FC3A975B3D11BA7A26FF3887BDD4CD96EEEAA8AA20F7538E8B
AFBF3EB53A571328946D738A9CCE82653D1834FDC5094449269EF3455CB28329
833719804E77F0195559421B5432914086A78A7A4A5FC7969CA40F838A4B73D8
1CDADD6C2BEDEED7E2827DFC168C4B9E7A14EB8AE556F8DE15A9B474B05D1F42
51231051170734E8A05780E16CAB84539D5556756494FF43E59DB82859712101
8AF34378AAA23BA33EA0B5FD3E6E1917166BAFF0CD21F05A3C85F4400A79C549
F3D378A81F1B7463D9C37EE43672D27661CFF96760DC9F7CBC5499F574319358
5CEAE564D3100030BEF60968E8B8D0EB253F3377F0149B769366CF74CD16A31A
290377C1C246E8F752535C645A477D159BDAFA098838DE0197F025BCD674FA20
954868F6F08086EDD79EA06C4E4E64217876F06E2165E17580F8FF71CCF5C0EB
B37BF3895BA8E8C19A0598C33C81B6916CFC64CA02D1A80A0E9750A5FCCB62DB
F1515AB6B119692FE2134F9787FED86A2B25727D045F1D7A831A7904902B2B9F
60043CC2ECF58DF2875FC1BEA3DE43B426C542D64DDEBE7EF5D193CCF60074A5
D55F1299BFE4BEC5CD241563B980624B713D2A5A3951B07E59ECD76774A3D5EE
6345D32E1746C25B4B0C5656B3FB47FEBA5C2EFEC08A35D47B9B004E2D8F627C
AB181D57C447A6D5531E2FAC786D22F15285CA3D2D4CA699FAA2FE32E0E69F03
DC78BB857629B1A954F7DECE8DD2AA598B11F5928D2FB7CD91751788318D4FFC
BA58E42A6143F1CE2BC08509CBD49B35A9DB9F2EF423F250EB9E8AEB9B438185
98BCA484E8775E9AFE28BECCCC6EE3DD59F200A884BC2ABC7152F8F84C392D4E
CC59B70C3729A0C108D036C4A4BF52A8723F5A83FD7943914710B6C75F06594F
8043EC9AAA1B9E61BDFEC14181D66D9F59E056C226E94B7C148D8CFBCB959792
502BC4BF2ACAFB3120E9A9EE151663032E1D4AF79BF1CD352AF5645FC121726F
7CF6A58B62B0FCC73B2F686E4211167CF6CBB91FD7F50F9854AFE3BBC8675CE5
6996EA695F762AF0A277084B1FF53089152A9AF9B0A76B0606D5133D6444F9BB
8AB7A13ACFFD7545FD77F92F73D7CE620339EA4CC0A77B02EDD658AFE0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FF8536EAFFE3
51E99FBFE366A8105105F3ABF883222A8596B5C71A798B4C25D89E1A97DF22AE
7F7C5F36F1025EB753B8EEFB121487E91658D1692E96B6A021CEA623CCF6C9BC
4ACF593CA80F3ED850D167CB091D6F95BE42F08C85CA35DA36AB230E3D91EDAF
A2B77B58F4D04FF628190034DCFE58B45A71579F9701691C2A5A57BC5C6B1992
738F39E279ADDF7FC21D76436C5E22167202C94B089B617755699EE01A4C7B87
E4F5D46FB80565D7EB65EFF9467A98BB2A1B06CD5A8AE30297EAD23237F1A1C5
F538FB22CAB1E57CBB9EF520D4E82FADAC6C3829A77B21282347CDE770EF4CDB
A6BB2FBF3648C5F5A0B3BE75E98F6E719AE4A222E708C468F8B757E3E4224BF1
5C2546FC3CD2F4C08EE304C75F8C275BA31E999ECE027C3F34F3A7994822DC58
7BAD51CF47D76895919973DF3F8DA82E7835A49860EAFCC0E659A9082991DC31
DF0B088BE04EDAD1872737624823085304CA2A9E9480BE92186290FC29C3C7B4
C27598C98A3DF3EB0CD389A52BEE29FC22398BB244AA98E0534CD3FD1A44C8A7
4DD5CF9B41D608FA42669681F72A3C3B7CEDF181D84B0776AAA08091644905B7
43C26A74C90C77B605EBAABF79818A68219E858B6E4B63F8E9BA65BF43438EF9
F52AF893BBDA215450E6174C5C555DAD5EEEB9110AE468D1CC587A732FFAE035
6382226C92B9537DF8C4F37383902B4E1665B01234AC83DF6D4E53F991531228
15AEF3FF77045FCD774A4F81A5577BD4B255CD6114AA6A305C8C2635D44EED34
55C90F1D36E21D52A210FECA5F50626F2156ABEC6BC7453597A1F20DDDC346E1
C4E776557BADF9158C88A253D74774970B11342D30A798FFA9B26E48E4728D19
5114A9B35634AC999453690C2945D12A5044CB0AE12FB168192AEE4AF696EDE5
4CDD8A7B08A1A0E70E5CE0FB43E820AACF407DB268F2760F36F91A050899D71B
F8873C2203C7003FE088725F37CD5EE2122D79E9E395F5CAB8B4637839E43022
2CC6CC2E73A8B7B88E1A128C703B117F616F6E9F716F0319307A660C06E76820
33B4376512D85F65AD30E430DCA35434BF21A4362A89E46F7DC96AAD0FDCD2B6
0FF9E8E2D038E6DDD5BEE6EA025BC7ED8AB2AD965E8A5A3ECEEB801B73F312A8
24384B68C1E63595042444FA75A02D07082A94D3B28BE10AE301CC183BA579E4
45175C7443E08C57B73429BB93964F504924FE9C00A60C733E43A02B47AFE712
90BB2D5AB03FCAF6FC56C26256B9B2FE8226C32B7662157E6D94CC34A4E8E3C9
2492497C65597085592B8B358D93E8BB74CB357380F47D21E1E8F4754E16647A
BD41B7870689AFA703C14C6CEC9C660F929FB67086BB7302290BD3B395000680
6571B9CD0D82FE7969C2356F9388609ACF2038E79BEBA97AE481ADCA68963746
22F1AFAE92E524E801943EAB41D345CBE471FFB288192C67913019CCB8D949E2
DE5E95217D9C89F8A76E6568C4CBCBCFF85CA680A7F1C5C5F2E5ECBE4D2F5511
9A0FC4A9CD662111AF6D1E46DBAEDAB0AEFFF07735D75C5FE9EE3134E9987FAE
BC8E47930AF89858EDE20D191FBC1B302043F06DD5C6C0B583AD1B76D458E958
3EACC692913D9C2B7E21DA0ADDCC8C72FEB0DD3D0308B396C6794D4108C4B009
0F25273486FC05C819423D837ECC696F1441068E565CD2EFE54417BC8C30E340
5ED62406FC0725BD88C5C0BA4822EC87DD6E2230044D201B03D979E13EC12C37
00562574F26A24E42EB7202E6565A0071252884B872D3A300F52896E507972E9
D2B907C6E8ECE6CCAC7684B9DE946532C896F4D548B6017EE32386CC7D782C4E
605642559C5D083BBA0ED606E1C404942AF2DB61C33ADE345C6AB919AD4C51ED
0C8D95A7A03D8ACAF3911F47390051A3A2055CD35D520B4061E6E8A158E92E8E
97722C3457AAFDABB03EDE901C372B3188E10E4599E767C15F2DCF09C7395917
DB3DB41CCBDF5DA816E2650FE1A8E7449093FDB99959E6E37BA455D5FA7F1B06
AC07D37AD0CE47D8A249F665B33CA0CEAA29B3472D3EDDF379166825D86D133D
B1E1BE7ED6FB2E9536E75E87C380B5033672AFF41409DC976169C2D18282098E
151B760C9CE324FF020B8AD5B274BEB892DD3EBEEB9BDAA6679FA80338D1D9C6
529AA171C31E8970A2703173036CE5374FBF3968519BAEFDD633A0E366529E01
74005C85080B2776B80280051611EE2741AA7E7136D4C8818B84C955D42EF905
37D9529079DF418C1143561158DBD1B88509896A745587FF34076398D5E137B6
E173391BC7FDC4C3EA48A011ED335CAEFD8C3B6AD1242A80146250DD77B44844
933E182CA7E70AFF5B14B02B75CBD0738E35DAD8E609265984BBDD588CDD10DE
AA79E7BAA7E7FFA6685B01B775FECE0C07E55FE09506EBAF30B9DDD8C16DBB69
1FDB28335BBB3DEFDB921C86FBEEB0F238F7A384087659245BD5AA1A57DC0E95
6ADC19E19CA5DF2F8CDE6EE8CCDC7BC2A8FBEAC4A8017A6E7BDE6BE19ECA6336
09A0F921F59D19BDDEEF94B13807520C8B4F0FC3092ED33B200AE21D0404DCF3
2BCB28A7373F882027946277E1C656004E34D740AB8B3F64A4AEE64F7F6BCD59
CE994AD4BD0065D122E44FFE52EEFF539E3EF538DB8ADEED01318BC9A9C8A96B
61DC19759A70E79168A4521EEE8E5518B94CAC169F8DD6F8727B7F021BCE3F36
7A12556306C5CA204B245758ACE06C4D84484DAF1EF7B066D04982A8660EB5C5
7B8373304A6430A70EC988EBAD0ABC1DCFBED577BEC9CAF146109C540FB4AEBC
EADF0E4CAFAA296A2E0ECCF2A36B5EEC6CDEDDD20883EF5F271247E624EA31F2
9AA46E25081674519DB7975CBC1587C49FE6F336680D6B3CCDD960C4B6C9016B
9D08A9834E95F8B2FD03244B8025004C7BB80C559B33861C324D239EC488F2A0
BFD5C81EC333940BD3AD8C75262EF6C5B60BD81D2770945D3D6A8F3157D3E119
9474C14257E8E029B387278769BB6AD63813CF09BAD7FE89D6A84B2AFD4E8546
FE706D0EDB9687618A6762967822C6F1EE89E34654AF1562FE50627E10E5A3A4
1A2C5C8FA55020FEB0FDA5CD7987E0B76996E1D85CB9B6AB9AD754A4946CF661
C7E869CF3B0AFEB4165BA5C80ED2A7CDA10B3120E8A85CEA41E42DA0B8334346
BA37CB2A2FDF4D5BEEA4C65E463AC3969D90B8517BE8C07E33C0F2F389E550A0
1DEF44642A9520A2D663B9ECBAC156DA1883B5B69D572C508F5F79D509624AEE
50FF2A32B1C3EAF0FB042CB869B953F4A7C2995DCC840795C3D2F32ED5A522E4
382738C0A03E6C6B94EE9F7CA55F8BCFC03136DD2F11FB182D82439E80BB1706
598EE621574BCF115A45A05A86D882A1CBBB78F98EBDC2A986147BB6ACA8A5C7
6B0F25FF7E645584A781B98E80520B0A5627A31944C10E108665DBADEC977F6E
7846D738BCDD44BC5C4FE88E965BAA9AA631FFD425911F1CCB4A01C4CE77C4D1
3772304484CE3979809D6C51F6431DE0F8FEB6435C72CF2CDA07F7F6CAE804B1
5ACE59F9353B8697F9E7B556BB4DD1B0EFDA750C5474998E7BDF3147C52F4CE7
65D3EDEF44C5B0D5CCA0A0BA8A818FBE3EE19A52A2F28C067D05509CD09D29E0
6EF57BFEFA0FBA523D5D3EBFCD0D067F058809C206ACEF72754C78BCA626AABE
0075F0539975F8A674EC5E0EFBE34FA599D80D78F6CD80D0EA37ACCADD70F817
2F8CAB600981778E573EC4856F852CD4D79E182E6CCACB198F6CE8D8A6EB3954
5C4715656040F63A9BA0357E49AEE3F980E5D596933590014CADE0FB8BD506D5
37D4E3F3E6392F67743F8026058FD3A7870FE3A18D8011B58DAAE62C5510B10C
6B13B27DEFE59196EDDC9FBC2D2F4DCE7899574A5731947F43CBDF3B381F7B24
236DAFE0AF902ED0CBEEF14699937EC5E60F8A77E7A8EE3C58DCD340A3980374
657ACF22B4AFF4D46E8B55BCF641AA96064B802D074CE4D002ACB7308E017C92
07D3AB820112259109FE3CCEABA20891E2C3C3E1A6B85C0FA3CA8D280D3E109C
07B416756A264088CFB00E34DAA0D390D3222B48F4A0E35ED7F73F7F98AFBFA8
F16D07C2A668C1D575983455AF3DB5BAAE2B66D516748F7B1B043BC01723F458
4FBF0D451CACC5142CD5AAC12ECEA343535884117EA187BDAE4A23B9DBBF5018
105D5B4FC28C73E1CB285C53EBDEF475BD7A89433536688D058CEB08DBC89F5F
5E7056AF6D34A0A8450E23426EDD3B5974FF7E82E9C5CE63F9C605766A18621F
CEA034C5C74BBE70F9D205E59273EBA03AC03120F6891A4FFFBCC0B61621DD7F
C2E6AC045119D05D12E6CC73230AA4F30368DB110B7F0BE66B3611F7BD546D06
5A3FB3DC17E5BA390725FBF163E3DCE956C66F6185F013834CB091FF098A8C8B
11926A89CBA54B96C650A1C2352A4FE2B532B09A4048405DC9ABD6241D2D9C1F
AA81BFA30AC49C1636A7702075F2A408C13F6C7144F7B334AEC31F17F256BFC6
51D0FFF7F105FCD8226679C2DB7412A725E8D23D472F4245798EE8E33FDE0785
B76C1CE07D802E26C1CDAAEBC3A338EF7D2A2D5C614DA4977E76DC28D88A4A84
2DAB0EA0EAB3BD44E180AF23BA91444866FC3F07E66912E90D765E2DC1C2047C
FB492F39AEF535D8B77F09541BEEF9235087185177F2D5622332964BAB9DAA1E
4D1C22AA8E3B5747EF1ACA31E6EA49E026D668DE4F6F521BB32DBBF1ED800FD2
EE06619E1FC15860E625763C0722324F5AFC287E9C2421C756026FE8DEA5EBC9
DE866B032ED27B7C59B0AAAD527DC34B822674B30643F3EBED3ABC74FC6AF400
CAD3AE02AA5AA63822534BA521143C60BA1336FAC0BADB339F249C217C08289A
C47E5ED8215F853052B6ED3A629FCCAC101741BB52230AB7AF0FBEF0FE1F1D7F
55E8241CBD4835268F60216CC5C157BE195400F35BC69EAC32D9B60CED4AF379
1020D2C3B75C8F52B93203FBED3F4FE212D8BA78F446483709BD929D78CD88AA
244B3925AC7E0F7AEAB21EB4695A333CA907AAFA46104B528695B4549ADC7E66
B0758ACA2BDB177EB3C64EBE8104CDAEC5DD659A313FFC1BE7D648DBE6D6DAA2
6CD5D56DE6ED9A87DE16433B664AD0FB4EE6DC6D097A4375D0088B980C1BFE78
F33FF2A120FC5F85012157E885EC1564B469579207A988D09B1371EC2F00D082
95D28455A4FEA94502D684470AE3848DD071BEB59845AE3A76A5F6EF3254169F
BDBA1A33468CD7CF74A129579CF42BBE9D79C9F5EE2C115E46644DECEC9A9022
007C3E843F9073B8972BE4D170C70235CFE4F3ACD1D8CFB93B1607AEE79F928F
816178C007186956936B74CF1A1F3FB95BA4A866ACEDA884F49B1D0C796F5BDB
CD7AE16BB5B788713FB800EDAA3FE501B1F836156C7FA68E83281D3E4293B28E
3223F5B48F712DE116D79199A4028F1A78F3FC0E24D2FBBE3B707921B79E86A3
59784B1A62C0D53F29DBA34DA57DB22A04B0C897264A96FA299F5DFB3AF3D170
0111AFD79146A2B87465678B03E223024CAE4CADA2E9D83550E98F26B3A52607
A35AA8F30DD3E2A32A55DF76A8E4A88E07532C208F31830FF1799C8543C7C5C2
082E2495671E0B405C74B1477EC8F22265DCB3E415B42D110CCAB889F3596A23
19473A95ABABBFD6982DF64F6BF1366BA033DEBF29C468F8709DECCDAFB5A8CC
8D2229A01DD36E5C269498BCEFC45EC2F7C99701486E61591043A1AC572AA553
CDD41F47D2C672F624F43A10B88F8C80CB0D552C4BB9ADB810E2FA78B291B952
FCA78DCBB83F035FF731351E35D9F7F244465A0AB91372CDAAC813F3D3F2EFAC
5C5677F6F1C00093A60739A364387F0430D8FE8502D7B55AAE3701DB5639049B
AEB934B7C5242CD741F1D77FC848E243392C5533266F066F468FDEBACC40B79A
E5FBE88521932A263F6DF65E9B66FE80C35FBDABC59C49ADDC24B5E5ECAF2526
0F2E92C7807C74EFED2B132A2915E0454723647070692E6AEB04EAD823AAA6C5
FFBC6DF00949E238F223F1DC6C82984F684FAC254DBF9402FA697131E5D798A7
0D15F48C2F617CE0AD7A4007088A67B6018A665FFFB23654B08776938DFC3DCE
EFBBAC6F76445DD4B94E0C5EF66E5F4252E5511A19172AE7E1617A7776B87059
684FE70A0D67D92C6DEF173E0B552F4FCED07ED01BFADF46DA47A77998C831CE
A17602D39FAD1F056CEC4952227A4ED3148AA8F2010F195C2ECB0780F0C4FCED
E3D7BFFEF7E2EE88B9716A4A2DF72F1BF298BC8BB67F62FCCF03F6BD746FEAFF
2AF041D9781729711369CEDDA424A9E19BED13D137DFE3F01F21745A19FD0D47
FA4B70AFBE58AF4F2695D49DC8865DA93ABDBF3A63719D837EB628627743C1E7
186CFC7CB90ECEB6B7D5F265BEBDCA4C58DF75153E603AF1E5D0E445C452C5B0
B6B2F652D5909461F774D36EF27770625635AB75E1FDCE064578CE287B9AB896
001714CD4537FC4EBE8EE7AEFA3FF5A0B87062F186CF0DFC9FD8DDBE00071CB1
8BEF7A4D2DADA9C2961A75BF513FCCD45751A59E5C54C5AEFF1640292FCBCD73
A9F93A2AD55F57D783C4891253587C83CE622967C86E5B086732A16AEEF9A370
9FAEA9689741CF3E4A01EF8617C056D409C3D4E8A89EACAC47169DBBF3EAF90B
C4283BF85F6E8886ADB7A8C827B01B60A1F8CB5E7F9D9F6D462ABFD5DE010357
BDC489C7622D94FE642E8B5EA8C8FB725763040312B85F43C7882C8430F9530A
38125BC5B23872C35ABAF7DBBA7FBF0ACD890470AA5B85FDD589705A7E0A796B
3892A40252C5F99544BB1DB63DFB50ACBE8DBE554572BC3357DAA62CEC6F84D3
85A0FDB58FE3C2DD02E5D8200E9B2EAC74A9E91D9FD61DD10DC180A195DE9CB9
6AFA5F8A1DEE69F1AF422724D844B90439E8AD73CC9884CC5F314D97D981F304
B12FBF84C33C63436FA88D8913B795508E5BAA70C78DD46A8CEEC8D2F3477E84
43F2B086240C4EFF3633E94E6080F898B010035D65421D0ED29E7E986C8EBAB9
05611426259F6E52EC1748E02C310937BF33358AAB8BAF43C0491ED4208F2A7E
2311CD90DCDDDF2859681D7B7E0105A873CCFE928E92132194E96EF9706DD439
CBD79177C654F93676CD7156CC449C1204FFDA4D2FC79A2997A5F4DFAB0C6514
07A58102F825D9534F2C1768DE55D5AB9360D03B570897C7A52CFB465919400C
21CE4724C05B56430F566A6DCF28A6675A0EB20A8A3263C17D6991C3188A06D8
5305F4994827DD1017EEEE54B481F0629891A53326E328A8F446C41510A842D5
DFFA8223B037D921541C44C3092FBC68C718702C35B6334C7A0252273AF4657D
20899EE8C2CD56668F756DC5B9CF1C87BB9B17AF3199BD45A3407A477D1A7D97
2649F1E5AAA05720A2ABFA0EFCCDED873C969BD830908D6F35C06A0069BE6426
440987FE7AE6ABCA16D566FBEA8B0960A982D2FD79B5603DB4A5A4E1627BAA96
D856F2D9710B38FE827C41C2E2A09A319D14ED56EDB05D50EF7E4789E68361DF
BCC0B1CE5357222E5B02DFC7C0E8BB426574719FF18C8FE07D6904608760D111
F44625B25F470A3FF2986C6BFF3787AB11CD2BA1966F4EA30DF566B55D4BDA83
DA72DF97C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA69433D30386ADBD8AD
DD1496335FEC30F5E9E16AC846CF268AF7AAE1EB3E34869AD5A9FEE87CB3C125
AE6CC4F544542D02DDB55842D44C4D6C7F36D41B630091F13DFE34BA48019506
EEC3CCFE629645D517324A5E6FF1132CE15B622384D7C542F64043AE9CB0493E
6294A9E729EA4D2A091D0C6088D01C99214CCABF78112EBA272D603CA4D5483A
D2A9B0D53245E56E4A036E33542530F02E6ED51ED5AEA88E89FF81B9D75B3749
6CEAB1A629897425CF8EF14028119709AF1FFDFC037F2086243BA77A560CAD08
CC2E5929A3177786D66483E8E08E2AAB61A3C1D0EA86E3733ED13919BA719C14
D80A9BBE54DCCC08131996F59A218DEE4267826FE2892409609AC243FBFB8DD3
A2F90BE6880407EE8ADBC6FBEBB247D772B3A60FAB4F74D8CE49336D7CAFB9D8
C0238645C253E713E1AABDD1CCD5BF99AB5B1A738E62B64B42245D1847D7CD86
B38B3FC1AC69CE6043072E140E56E5252EECA5CA374B66A0AD549F1825AA4516
F5233C781F1DDAC3F575322214558CB808F8F95762FD3FF5ADCCAFDC35B686FE
7BC2E431EE3FE173E7C5E87798F80359A431075EEDA4FA3059151FD1AF76716C
AB8EF09A09CC7FBB431BC15F86B9C46607313B766DABB4DA5C9565A5FF811F1C
0E7DA8B2C95DF751A861273A59C66C108C1BC7FEC51957508FE23B0B80C3F944
CF3C18828FBFC867ADEC80733ECA11FCDE01B68DEC4EFB7A13D2725D9F39CC77
E2A865ECB46A59E53F051094FA2BDC74C96B85119DCFC6BDC4454E17834256F4
C7963740D5CDE2F8C46440DD835C6FF9F98DCA7A51B3B8D7422FAEA54D18E285
BD9386FD2B49E897C61B7360E7075100DBDD0ED238F729BA9E215F98D20E0585
A37CE67369F96F5C5638C5EDDF36E9101903555EDD05E5B4D457F2110D4B9B90
B87DC5E922589865C3E3FE64F5BCF6B07E842F9E551514F2B464282E71FDFE23
BF88BCF55453A1FA4D7610B0D04D71E18BF921FC713F42BFE4E2CF74BD96A2FF
310C181AC57CF55186CFB32B811A4205874824741170DF21A108E54F55752CF0
101318E8AAD2AABCF33F072CCD073A3CA51A2C24ACAE5FAD53E5CCB17AFB5F06
BAE288FADA6678578FDB01F9ECD242EC78AA1AAA7A8AF17A5BA498A97E8B3446
8ED3AD1C39D7709D8CA4F20B4BCB6063F52919FDD6A7EE77C90A1AF982892390
F8365E9D27377A04D8888362C081B3B76D4B2D1CD714B2213010739F75F0F1D2
50DE5948E00DF185FA99BA638F1E44ADCD03F326227FAD786AFD6EBC6D5745C1
0D2C3BD560C939B80707B471D13D783B819F2DCB453312073C7EA122F58EA740
2EF6A7B36AEF1C4688DAE073EEB636927885DF1D3AFF4BF6EE7D3226A37FD213
4D35241F5A4254DC11A417D465D56805561164658A058E234468B01FE40756ED
5627E1C049C19C2A178F33BA78DF24F7346872E84795059D0A12F0E0369927CC
97B1FCB791BCA86C8000610FBF38625B873588D9E03C1A537ED6B29FF9D2227A
5447F002948406A8E6FDC3A3C55A376E555E91177CA6A999A9257ED4A9057799
11ECA6B49A6E98ECDB6157B14D2F08D4495942734404789D48F908722BE9EA08
E8B2F18506A2396014D2379C10B7E17010EE18EBCA58947E9AF46D821EED0040
13D3DF873589D47D369B6639C6EE31AB83EFC79C0CD262FFE9C5280880B86D2D
C35CDA6CE5059463613DD3641224AD32850B34CC9123681D457B16A52472748D
D1C775FFAC460F071138FC4DEFD4652F460213C5CBD61DC67B1329A77AF3F5F7
9161A5AB0993A01BBBE956F29D191748FEE5F7CBBB91C2EB7BDC51840EA89637
922BC7A9DE94C8D7D4737F172B63FF15F22DE6C9243DAC6FF27DF8BF7F8679BC
E0A0A73357F06F8B6A3442610FCBEAE09022707C03B0945C3F8AB19CFE825D3B
B95939F783C5458F0F235795800CA8EF1EA79CB4B5795CE175B921697F9D6C48
649709B636A42507FEF5D4D3D8DDD816A28D7BDA6F72E70431E695A5D247A11B
BEBAC03E316D1360A205AE1CC865AA9F131A4A2CE53871169E5450609A6F8409
CCB9D5C710D13B4C1148CAA4D0494D00E8F0B24BB53E5727DAA1EE2A6E04029E
D909AE1A3730C3DC942B71D1DC4EA7F6BCA3C6A2FC2DA27396D4D5C796208DF7
466B5D249879D6957DBA36456D4024280FD1A3C313E8EEE5AA4C400C178A240D
59BD1A282B345C2EDEDBAC89DC211A287AB244A9DCD99554B4A80C86B4F13E24
547D8C123268CC2A6DB4CECBF5EFC9F2DA5D2DDB34FB454F1FD753B5C648090F
C5BC9721317E214634D44AE88030E383B547591D41B9AB5EB4AA3644E0B7B8C8
86213C086BF6367091BD71D7EAE0D1C027BA94816B67592B3677BE309AC4DFAD
AD378AE1311DB08B6C3D1C07D4DDACD58DCA994E8E555EFFBC2908180593A211
18E8EA5B9EB56E7D6A39C314F2E83E97F868AF583ECCBE6FE0329A031820D4D1
DA9D11F02FC7554F22BC2F6FBA41D80517257610CA9E08C0A5CB89BE3580719A
B4D7BD59E92911EC563AD90F055A604D2DB0FCAE91866B72E7F771105122A7F0
FF613656C5113755D38F0B959D2F76220A34104DFBD57B5CE3BBD6B3B90E508D
ED0CB4C156020F34D2E4564D5531B731A305C521F23F1BA8A86979E6569D91FA
D1BE1DAB6C682B89C524340B1BA35E8A6B4421C003EDB5CFBE11A6EBCD1006F6
39F27CF356A44DAA2DFB3A05A184D699A385E03D2AD597EED8D2F6519E13D840
CB40CB003336FC8A2934A191946BAF5C1069EACAEA24F06F38C9C525D6A7B2F5
000FF23382B2D21A5A165E0A2DBDEA1DD7A7488A126157BD81AED0E9741ABB34
30D53B302EF8913C6BB60B5A998AF8C48F7AE024E79C6163F83FB10ADB61971F
91BCFC1D4C68E4360EAF5E229721E197E970901B0AA852B916269B7910C7667E
4B46EFFBFB8AFB28E20A06485AD659D0CF61101CD2AA16424609992F3067D9D3
BB6513B25493ECAB119930877DA4701372055D2038EFAF072CAD8BBDA043D368
E42CE70C1765146AB9A6825704DB3EE8B86A9200A58657188818DC361AC72BC7
5A7FF1B38562E968F162A7E31D3B699B98C66B7BDB0BB158619ED4A429EBBCF5
083A19705A3384ADF37EA4A465B6FDF68EAEEEAC451E2A4C3DD3B4683B4CA3B0
13D007F1A02764344DAC6F86EEE0D2912CDC68A852E39D42C9AD6A6408AA2903
3BF4AE1EE9A539EA1D41AC3ACEB48A57B167CBD4BF5A47FED037760D1B21C8B9
57D352B76B724D32850236BBABD9172C304106BAD4A447E52D4DD99D4FA6EAAF
63F8D239BDB8CA6164963C3AA18E77F8A33852FA7E43C2BD2CCADF0D21EC0024
34DEF78E7705CAB086F8C5DD092FA0584B79FB0BB1153F37729980829B5ABBCD
E9AA92B90F5250765A9D4B49446CA19CD50B9544903F3219947F2B37C7BB82C5
74963B825779F78C3C9141D85BA4F5B57524F6D8E00EC1D435855AD7C4D6657E
242BEBBC0D1127487293B9BCA03BBE5DF3DCA47D51883692A203517BF1625D48
C577556BFBCDE37B25378010D9FC6A4B2739B8192F67389327D7726E2C9E6D74
CCB2452C4673DBF8FC09AD3FD3F43E7CF03D79AFB114EC4C2C9246A304B19262
29D3836A5A01654BB3850CA8EB3511A7AD86DD732291B5D193C8406FECBD4BCA
D3A1717E780B0A9F172D2C7D88B573E8E156536292FA856954A309E2AE00EC64
2260BC4D9811F3515CC01B842228D954C8279B7C45C8E0942FEFCE3C6C420F53
DD1BA44D239C4AE71B9046CAD64AF2616A667C458C7EDA46DF040D45D1E7FAD1
1510C1BF3EE7A9495B072911CC814C19D53B95DE0071E3A439D3CE361B59B125
16816675EF303FE4F01F1F84DE922D69E222C8B3240023605ED2F848E848B881
11EE5C79A768E87836894E21A64F50AA7D53090F61EB25B9FD9BCCEC04240994
458BEBC4E75F2F3C9F6124B9745652ECFA0D624996ABAD2CF549FFE58BFDFF5F
D8954C0B4A8233C5996B34A59AE1DBB00D7356FA17421E7259543464ADC9ED21
CD6E34B28002DC7E74C22192182C5D3BE601C0B1A4BBE9E22E47F1B4F33641BF
53F82CD8E6D7EAD84B4B40CF9707C49D2A572DEA8CE4BF3911AA57A9D9BEDD1E
C8E459C7E2B55BE2EB8B973B283C9FE104E141F00F827B2955C1A9D43835A12F
42446BB32E7198E73357DD96129EC8500084FD75CB36F23C0BEA5C55AD278CA8
D5563689E6A350169601AF4CCD120E7C16E6B195372FAE48F26581412DDEC40A
9CBECBF77993B27F23C4B9C00854246346EE4A3F0349311B6AB1110FCF6163A4
09D01F64CBAC88D84D3A6457369A57F0B9ECE37C79DEF7342F80A22317395D5C
288EDDDE2609D60C074E62FCDF8BE2A673DF503E8981DB670CF5CBD09E176E26
5CF148A20096BAF928FEF7AE18923D4E4EF922719BEA95A88E93D1353B575D01
80EAF19D803FA4B56654A7CA48EEB86FF3FEE21B1C751654A3CD885FDF9E1636
67314FA41B7577457D6CC99D55A4AF67996F6BC21BEB95A8CDDF4A2C54B97102
F1D8B438DEBAD341A2EE0F1DCBFB9A606F4C250F04FD0D8236E1A0B7483583CD
2E2FECF757FE7DF4DFC15C7E759C5A78F939E97A985C2A626853C90F5D64F3F7
6240AFBDC3C6DA722ECF0EBF40EACA5CB362F71DD72477C0DA3E63A44796BDB5
DF0FF18DD6D0DDB87A1D1C0F5D153347CCDC6BD80502E2FD619FF10C221FAD59
AD71A3EA68B88B01869F47EF868AC4807F7A72DD9606EB2A6828C192AD9B8C0D
871439645F13CC92438937409FC21E8430D902D4ED0575082F7BBA625ABEC763
7E30CA29A981BF854EFBF1D0D67991794AB8B0F34D0673364D2F5F08BD1F4CFF
AA8256665E945ACC1C3391C523D03D761BA06F1B02789A1A1DBD41DB89C4A39F
A46B4A38AD58958F99B388996A27E4435BDCD0E5BF6DCF946D021BC9F43F8925
299EE4704527F54429AA2235BEF4185CBB4A7E9B24DE1396B9850FE7558B4E33
BFCA4A81CEE93EB2CF50B29DA213D137E3AA2F6E8D3E1806E44BB442067FE488
17E2A2F71D3622DEA8CC48BC1EF2E8FFC6CDCAF05AB723A1B2C8713D5BB924AD
6767E2C752793F4161F071E375D43251E9C2FC73D7697FD45E3979C361C173D5
60276298242DDC7894DDFED62B22814E59CDA6BECACD36404D977FDA2062F1D6
73E9BC4B9FB36398FFAF11142442D80D742CC8B5CF9B2479B4E7C3B7C6D9269B
6BD2CFF2A335D8E21B5DCA855348EFA9EE89E81DC78C30341A5210FA0E9F2D6F
8DD5A6C15412DC17FB65DE01DAFB3377DB77F10DF6B4437173A810C3D25526BA
D00D4DAF20A778F9A2BE7ABC199BFE58FAE570AD4D192762262C77755AB5730A
F4158CDC017F6A872BFEB24F4F541CE0FFE4B993617095E813169F68881E5062
A25F890B4B25A3CD34EC6F25EBEDE4E7172DF87627CBA95D01014B103692F8E3
1D4C0B2BBAC3A56A1F64F2453376BFF05FDE4FAB04CCECAC1EA93988BE254E86
5898634CB76B798BC4965F27BF8327C9FE55B586D057A5B67F97297EA7AB4E8A
C7F70BCD0AEE3C4CCE6E1793589423B942D82F6A01A4C384B89A91D53E0CD886
C7BE0692CEB0CF29DA649514793A83B7CDC6E6F044C69648A0320DA6B89077FA
87D55CC27E5859EA562E211A70BDD212BBF5C830B41009C9C9CA768F3A1F8E41
F0090D8ACC320AA4307CBE531405F6538F88EDDBC340047733AB3AB0D27866E2
FD091D6692D29D19C4CAD31A9169AFE4B6F1293846B2C05681FA219E49C2F4D2
C8EC80D9E187F9E15825F578278D893FC874E4C934D42A9189737343ACE032D5
75B0D071338E0B37511CF3AB6B7EDBB237ED747AD16E7C38196C9457A18E4CAC
6FED9AFAF376F3BE1010773C400F2FBD790D93B0A8092E176ACFC8C5A4031DBF
1B7A9F8790D1E720FAE7571F9542FC063B35579C73EB8B80508B7ED2012C5ED5
A9F1AE7ED88340879B2EBF04DECC857C444AFC3FD89AE09FF322EB01B1222EF0
5EC89BF7023DA00FE0F8A0DC033E93B040A6121DA499CC2DD64BDF07079EABC6
BBFFEBF0F70C0EDD2BD69F1C8B71B7D3DB7BA2F63735274F754906B3EB804514
B98E6323F36019D3556CFB0DF8B76F97E3AE0BE60A41AABACED09631FEE0CF53
35C249598578CC1C437E81D737DF5B9B1CCD7695851C1D61D7971649DC960844
2D234E87B1C39D7B723341499E23C5636217774935F6E81155806CCF27146062
7487B4075D21CF191A2A9F42EE8C9E9A2200C8EE611BB2D94D538E4FF8BD62AE
25DE20A0745D88EDAB8F60022354A5A2A373A7E4D303AA48061C948BCE3C0DF7
88D2F6C3D24D701891DCD212C9FBC402B9D46B2600BDF5F6A98BD4A2227B717D
3E2A53E09A4EFE530A666EE9AE0536BC4BF469071963E5A576DBB19F3E748799
D49C306564FE520F60BC12355C3872CD092F77FE06EDC4E1678DDB1D5A16F356
294AFFB344911D7ECD11AA4FF54DEF7DD8A014A1991A1E999AF47447E6CCA2AF
60BB09D4DB7A4DC8C067E081B140D7E73D6F6FD77EA8CF1DFDBBD7C320BF66C4
4969BE4101DFDDA5227F71A4069A1D72EE206EF54CC7CEC4181A982884C33E45
300D17BDE9A2006B8BE5790068FFF31F92595FE56D439417455C5DF775A1DC3A
8D1388C4604675EA730432DDF34B0D0E83B7D17F7098DD7CDAF6489D14037F88
00B4FADAF82E8C2141C8ED8ADC2A71666BA96B955AE3D41C3C537D4070B1FC4A
C8FFFCA5F7EFF91D63ACA74E42E4BF2EFD33741743178C71B7428B9EC46247A1
3C0BD3570E91FB114B75BBA9E474804EB33DD8E08593394D91C7EC0AA56874E8
D5712A7963A03E8BD740FCBC981D4983C06F777083723CA7E3D7B64A40619A4F
016EA3FDDEC79AE2D94A7501F6A8036904E828625F97DAFDE6EAA3E54E66ECC9
857CD9BFC416441356F36BBC7A0ABAA9E6795A346DA39CA5D08E783430D7A1D4
E7EF42672563E40701ABBBF8F7CD63FE88FFAA20E0DCAAC5BC244BB7DAA88AA6
04581C9E7E6AF33D57AF30362246992E543DE9ACB91AB3194C4AB9C3DD5CD700
C16C7D2AC7E497F4CDB8308A5128BB600E7430631193BF0533EE75223739B2C4
0F0B848E5F1C5CA9A1D53A19D1D8303C39AC1A889D7B29349C96A4FE99463D86
2B381BD2DB9CEA4707B585E4DC92E8C21C1E6F27E6F84B10171CDC99FD86A83C
0F3BE298373DA0C6F6DC9EADC25330D3134DE8F40C716B11D0A6E396D355576B
9E5B6A28984F609F872CF41ECABC321E0A4F6F62668E67DDC9692092402C4386
5262C00410BBB31A89AD23AC78C26C76B627A600BE050E645BEC59B1DB14A6EE
CC6AF3FDB0DCCEAF267EE06D621BC3C3F02239AA26973696ECF16A7B6EC1C331
4567C88BE2A4333B1E9964BDA8C4687BAB30BBFF5777C5F9FCE9085CF55CE054
8710F84BF6F6184EC5B23BAAA38700327E55EAB8A3E9F8697B41DEE418380FEC
E3EA452620DD0BA89EFA4209A0D058AA83E203907577C8B8DE4E695034A0AFD7
D67EE73457204108C57D4588DB4957DD1E286D45676C9FCC9C894CFD88C0C38F
8DE1B553E8D513719B44E7B95D54D28C67A26AC74E1B3247B0C39C8F087A7417
FA70221F5FA83270898C3709AE3F744FA543EF79D2B5CD3BBB83A4BA36EFCBC7
FC09F9FDB1EDAE355693A7684AEB23D4F53C88E84B85AF2CD84E6AC1D9BE0EF8
8D9EB312118BFCC4895E51014558E3EB72F01B40C78F7C7D85BA2D7B5EAF8B3C
3CBEB482CEB518756A526F4B6EA145D5DF363852323497CB0BE3B4974734739A
1236D97964D5FD520CB287006E9C03BF006625E2887F9FA07671667D061CBAA8
05921D4EB1B72AC8F83A69A5AF81C89297D562C02AFA682C65C411D784E14328
5DB6A5B530F851A964659C86241FE188A2B151D9D4FBA51E499C470E030321EF
CC75626861C86A9C0BA0E70C944B3B21C747AD5ECBC4ED711F973F0DE96B4533
F5E9B79231AFA2F62BF69C367F0DD4D73689183798A4A2605095672AF5F4C0BA
D5F27D6E47F4FB9602AD6E1158543D00A6C8245331ECC4A22BF194362C862C90
4C6646E450C3BDAECA923099F7A9E837B7F041CBBDC5EA8E7BD4A60201220C42
CBE02ACEF37737A2EF6C9EA4A2574BF892347DEE0D1B3D1D18E5AB1B95F96647
8C97F5D3297C64F687C9F265C212EFD14EC1037CFA11A016831011E0E746C191
5B6A722AD2309B64C34948AFDF91CEA57E9A373E408D7B873B038F529E3D5638
19EB1ADD23066D40A8B93674F0F3273808285BB8BDE676EA27D015C5905C0C88
245721D1A099378430B4C64BC5513696E3AD894BDF4C177B8759D54EA2BB204A
27E4A19E86229BFCB981B3E6B4E3291006D04DAFBAAC9CB9F413FB241FD5F5A0
3D39DCE4DE2125DF1CE4ECBC974490F2C2A1EDF1F2D45988619AB1202B2F1C18
CEBE116449436A83E5A7142570FFDA5B86AD9E22696945777044B6932C564ED4
4C6540F8510F27037877F54C2062851918A2D28417EB931EC402CAA78306C64D
10E1988F85F6868FD8B1CA9742827B4ADD0DA98FD84AD4180E25334953C7458C
7FCFB33A2D1ED81B3921841A04B3EE1FCD23F8607242152072D81B8B619BB45D
10C090686E0F782BA436F00BE48C470B0D865E4B850AFC4355DF76385DA7E71E
9075F6F02A18D91252FFF051896FB41AE28EC4D1EAEE4E0DAF8C2FF70D0CDE08
A8D6D007622E01694D2431B1C75D0D864329271EFC076E6128D81C6F00769A00
80FC1923995EF7457FA90DE6093C52655E4226699DC95F498ADF1267EEFC3B3D
0F4B9EADD6D2F636B95CAC8BC35E5D146BF184A216B7EBCD7EBC32D41D0F6816
DE369520D3E5B0C3AEA4BDD84B475935784D017C3852CCD084DE4A62E76FD863
0F2715A991B12A360B861B6F2975428B6F9615392D2FFD30DFA0EAD232929CB7
B2BA4CC169E698CB260162277777ECFAA09E0C87B27E6D58FDE98C6F42F381F3
7DA0ED02947A3F53178B578616C1D8EE9DD57456CA8D9CE2E95B910534CA486F
E37E791E52FAC9043DC54B7343534ACE5030BD5823A26F016EBBE8861A6EA890
80FC9A0BEB44B8F82CAA7C4A13D43DFB0AD5B7D1414A51594F500435ECD19006
28703CF22CB14BEBC899C18EEEFC41A6E13A127C53AEDF4140E4D98124397056
98CB5FC4AC11039457B126A0E40270E5AA01C127D8EDCF108E7952A52B737DFF
1FA7912A5DEBB49FEF0270D449C1015E618BA0B820A294F012D82B2B8F4BBE5F
7B7F9FAE2A4625D4E6D6DC9EA7C8CEDB4D6C1EE60CFEC6BD917A7819CC639EC5
47B1F614916C41C43D3886DA0A37875586C396E3C9DC10E83AE65AD33338144E
0CD09FA75C697FB85D1933A5285F4CDBC158112C6B4DD5762685BD2BB8EC4DC4
5856C7EB0595C07B21D667A45C5BCD20AAC23DBD644FB20AAE98AC797DB09D8A
C0CDB0E6BD6EA09F9BE6AC236C382CF8541FF7E2FAD832CA10285C5B5549BA1A
3C9D6D42F6E47931E8B8D81594B472EBD68B46686EC0EA375EE6E5F471D08255
7AF3AFAEB943512468A499D4230F6945D1B8C8C76F85EF609F38FB5F28CAF594
012F12A7F694C32DC4C5292712C7DE75880D87A48B0CCA1143E5631589BE5B94
EAE30582B0B8E8F50CC3179D9C157B23912312C400B211CF84ACFF22ADC5031D
7CE9B5A1205E68358091321950DF794E933BDF20E3791F7BECAB2A5ACDBDEE7D
FE48ADB261DD99BDB2C8D8AC61BE739FC6FEF432091779E3A4F4EC8A9027DF0A
2758DB7225EA04A477D5C74FC390F21DB901FC1F8F72431F2553A105E1B9BB79
83F7974CDFAF2E8CDB62C14B9699226306B6B3CE92B48359E65FD93C9505CC49
84AC4EB1FF91742F42FF2FAC9D84FAE80CC04AEE5E1CF3C7A86167569BAFB3A7
32CA791741649B697C9A32421E311D9B78236A9AC39477C2A5F3B74FC2C16F09
223181F9803964564344D337D99AC01579C68758C2DD45CD2BC27082183C0D94
52BF086EA835F92B6A83D833AEEF58FD0CCF20E414C6EEB367EEA9F702E0CF77
29009495AF32D004DD92D7F4C737C3CBBA16D9BE1B03FA093118A5678223BECC
47189AD167D1B9C3D23C6A57A1DB87C5DDF2002E49A9C1D2433778CA867350B6
A07D496CA5CA855871C4111B5F52203AC254F3EF5A9B172F739B5C97021A069D
FDB3924C81435D6366443F778BE30D8A21808D1994F8FF7EB8E80C0C3100BFDA
DA5C72E97A73E6F52660153DC364B7D1986CD7AEB28F9FB487DF584B1DDB206E
C5E659BD089D68259D977A1CC3D59988F863ACFF5BABCD63AE574DA21EE1B96C
26148FE8D6FDBA627161C4B32071B190E26707CDE0E10BD16E7715496BA7AAD0
9653AF537EFEEFB37933824EDFF088FE4860F3344D9D87F606EE1FCE4469039C
849A247752F901688A283D668AE7CFFE5966325807A49783FA3B78713A8D3DC2
23F4C5A219BAB5C50FF0B3D86FDB254BFE771DBB2211595F59020D011633BB92
4EBDD22CDB646D1659DDE8EE66FCA4FA6BF4AB633C8A4C968AE2F64847882540
31961FFCD6194962E01B1255D0DAC1D19F774A0D2F55B56DE31A64927CAA8A1E
8AC4D5F0563BE5551978970A151D60165C88D2A2A0084489B6FFB88F05308752
F3EFE13BD6385B84C199FF2769F4157FBB049767340D02E7D0F9ED60D1BFDFA9
70776DB4DFCAE58D273AD54FBAF78471E35D911D0B9A55D7C6D8161431752D57
4B889E75E2A662DD37AE0C4B28FF8695D21B5B85D14C428570232EA5942ACE88
AE14011C337B68789CCFF743949BD6616ABA5C4F74DC16F5B44B016B77A1182B
03F2C88C5E4101F8958EBC11C95B1E7F22CDA96D43CDF75EA67125C72A4E89A2
4BB0F67DBD46CE70CCBC2B09F3DE66D8B2FFC8361912A45DC6A679FDB1CE8F20
E223293A277FF275BE9D10D4F72D9C09C3E93BE53B2B6101B51F0D07F66A138C
D6A63D541EBC0EBED5CE88700542585AB3EAED5AA8A5951992A2A1A278B2E901
234FC31E9705BD8924645AA29FE38DFCC9CCE5A2F199957C8F55F6D5D0C49F28
2AC7BF5890CA1F5F4F7655F3401900575266DA934109148F055E86E925A9041F
EB7688552720E1C6F5974C7084B5F2E72EA18B82D744F6E3E41AB33D0B79A3FB
6B51B23AF63470B66DAF8AAFAC6153C5CEC5C471A1D8D525A9756D897BDC0FBA
2CE132D2239045D27842330AE4FEDBF92515FD7870D5F76600CC74E2701E351B
28CF44D95BA3D8DBDDDFCBEE31AD8E14A7841260B37F8A65174BC831BD74C8DB
52EF5F2D9B4CAF712DB8D360BF85120C067C02C21C42B6E70EA03280C89C2D94
953BAEBF6E534603446D00BCBDB780002E5F032DAD856CF9C6AD80A66E43FDBB
CA5135B0FB889DF7D2D7368823718BE11ADBC0324B1A5490813F56A91F74BFC3
4347090FE85C2A0BCC1E2BDA9370BD92024B21F65C339D2340E9D2ED3AAC8F60
BBF3E133689C11D8278691D8CAB9BA2DAB1B0E98282F9C29AFC84C878E709592
7CE6C08B886ECEF642787649E90B3A68C3AD2AC3C0D618220527EABB7BB8A111
3BE5E88BE86DF657B1335E3A66FEE522170997F28416906CA2FC8A858D281C57
8BDF63E9AED723FA33DD3E912FFFD321504699B75ACE8EBDB6160C13F95CFFFE
744D91F581EDC66E14842F78857C87E574E3AFBF5CC6C4FDBCF99600AD1BF28A
2735712926F26633F9A683A83C9AD337F4CACE2C485E205BFB2C9C2D8F2CB2BA
8C15ED375ADF442897A26B2AC8B13D844A4465335086B3F84BF196FA722456B7
C4E7E39865C82D5F19EDA3DE65D5D90A22A590CCEB7D24574A50ADD15180616E
BF1ACFE0CFEFBC31EB70B8D6AFFC0B6640F27C0EC373F064ED2951DB9AE4D129
79E713F8BA6EEE32C2C3B73B4DFE7DC2DA9905CC86DB2F403E765B1E5DF757DE
6D793EA9858B170CA6057E1866241587C21FC5591412300B7DA5D28CC0CF111F
C3E98DE1D92278795ACE656D6DAFE99A8878793DD98B5E4150F3C8D729D8684B
BCE30D8412A238EF404463DEEF4E9C4EADCC6FF20E98C990B318D7B85A15D3B8
F74B1D31B5D1AC95AE1041667DDAB97087391ABD5F6294D35ACDFD2B69FB95C5
07180E9EC5078B30942AF12C7A4E6E2C7C88ACABF2079EC6B70D196E5F6A5FF1
0E5E1E085727CC9B7C8ED605E5221D9BE75AEB9DA13FE42486A2AEA6FD50639B
3B5DB31538B69320EA371660E032889B900F62DBDB53F0B4BE25059AEBFBAA88
7BE0F589D5174EE0B6A41F23C44A566CD8E0A4D89F586BA8700C04EA4DAE230E
0445332CC3499D69F12FEE886F5B170726CEC6A5DC62591B2E9E8D68A04E36B1
F7ACEF2072B2957D98A192A996B35E5BF9355CEE1AD8501CC63D4CFED9C1AA23
9D439F61FB670F5521FEB5B8E8B13085A3928E0C30C903BE4C4507460636CA2D
4A5971C6B191B8D3EDDA75F30DACC531BBE69F0E68E9A235938776AC2A2A010B
77BB73A8C475477E1E95926AE9B14C887C5272885B4D0DA216483034ECC37A20
E204A2117C250285EC75FAFA342ABB5ACCE1540A116302A383DEFABA30387368
4EED7A5DFACC99D741657B123C6F3ED643002A526A95344A2A9D3BB26FDA1539
8CFA83C5665DB48C538D0A011D8BD08B362171FE612736773701EEB302D72AD5
A27A82B48D2CA814E216B3243C1E97D32FAAAEBFEE0F7C8E3F4DDA7D05D3D0BE
C628724484408618B239F5DA8E31145388F601EA4914B4967A1CB7ED93D0316F
A5DA5994EE60F5017F3CD4D689BB0D38B19FD9EC74E30F56A990B03CF037C24C
D3A16C08BB444529885599F28BA067B1CC91AA9BC866B1B1962A32FC73470630
A0340F84A6542C5A45D3A1DF52156D17758F9D94D74A5CBAD33C3EE01B711E20
DAD8CBC075939D353360D450D9B984E8E1F96C493E522451C4FF99CEB80D6CCF
31DE2C8270F8FB8518A64F8A0FE7807FA9CCCDD66B0956455F3FB67C16195DE9
D59A916328A7AC7D56BFE4645B8500941B1066DBA1FD84E47C6049B128EA5F4F
6BA584F4B106577462749AD39A263CA7AB4357A804D6756F200E7D9654B4145A
50397A4A5825E4D48AE9A7EFBEC7E750C11DC251D505A0DCF751F443344F0D17
2DB873172416CB81F7AAE151A004B1D7F6D423356470E71EF7F91B1A6CCEEC86
F17531B5A70F652B535F091980A3EE03353FD64397494BEEB4FC76EA4E38BDEB
784E81AB82771CBB7322C8DE1DBD297524AAF5BAD0FE474F83F284C19FD1039B
78DE5604C582B046512C7783312FB9A0E8FF5F0D557F37B7C75A4006503C9BA4
32FBCBF9339A8843AC121C261AF431C8378A81A85DFB5D6BBBE2D8B482FCB9AE
E4C5ECB6D53DFEDE98A838813E6C399E3E01A2202640792F5348F0F61061AF2B
E7E8B12DF56E2DA0D272CC4C3ED8EABFF286CF26C4B3209F58B14CE5442EE16F
B05B046FB028510ED22C3D1D013DB87FE86951AB4E4899B55A5FE6BEC5AF6A4E
EE46F9F2DAA53BABA6A12FBB13931DEA58FFBFBF3A214E2F2EAD8AE4236F741D
EA9DE8B00330F0083C002B7429108C3FA8BC77D75890C52BA2DB4F4E5486CA03
DA4B36DFA56F050B88D66303F331209D1E52D0516CD8892669ACABC38E1F26E0
9CDB7A5CD343B6CF3CFCA060B09C9B16CB29000A7AE24A5209EC59FF803EB92C
3FFA6D7216F3384B416D814BDBB3AC24D7A630BF8FDF8397270C1BE4D7D28852
FD0B979BEDFAE556C777033F84E1108BE90EBEA37E9FEAABC298F84842DFBD96
1EEC7B76A0FA1466D2D26537EED60912EA1936DDA0C12CA1EE64F052BC6709D7
58E1194AB6A34525F8E28B191CD7339974C0BD19FD1640CD19DA628C6A5B0F4F
C8FAB994F88C9200D60115549F16011957166359E42CAF569BF5C6CA4D9AB978
F8FEF7D4474B0366392C03F9E075696467AF62018D7F03F37A5FA1FF9C904473
8D65757DCB6EF876A82EB18E15F6891585D542F8A4DE875DFE39DBB45D44B912
41CB2B827CFAFB94048A13E743F633E84522D5016936BE1DB34554E55A3A88C2
17325C9CA070E70493A71A6A8D35B415DE7B8F16063C28C18CB7BECB8EA62A8A
4E85A96288AAAF526231C25A10BAE939C2790A20578D72091EFF10A77FF629A9
D10B4EB29D6D6D5A06612BD4E6928CA97537E4B3756720722FC4A722A20AD93A
7FA9725EA5510579C5BFF84B9B72A5EEA60CE37AFDCA58E6A947527AB14A167E
BBBE0B090CEC91E1A0C9EF03DA98C1607290BA1879D213A258A2D02D9C248D13
1DE20DA5D090D7AB4CFC177ACF1B68B26FEE7D851434652320E48BB3FD963C6A
3A7DD8AA18FCC6A8BF0477B2B86A0519A3F069687350ECCE7A7AB1EA82E09FF4
F4509016D3B5C95FE6827A0ECC31B8BD544B73EE3A246D6B8F84CEA5B0C52572
21FD156B60F05330C43A51C65E162495AD5D9398EEE609E483D00129441DBF49
7E8CC1D4C077A4C0A9005A97FBFFCA1C55633023A6A78726DA07CBE740A3F141
51D1A138BE8210B1CCA391A53A0D783EF5995FF6D755E62131F5F39BD56BB840
DC7481CCB5E2277AFB523865F5E1EF842377F6318F0ACD46C2C480F8A28AE7F1
3C370D12003B8C23
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A32308
D449594273440430824210531E56CCF19CDD823A21D4ECA36B55B270E20437A1
8E90172263A7E43905EFF7027AF9017AD7735E1F131F51421F2478EE5CD6F0A4
C535708D4AF7A08C723C249E2405110C6848515BAD14D0A91EF121B26F80DD9B
0B2200283467DA24815820A6A2C9C88C5EC3AE96CD02A7FBF899742EA3ABCB6D
3BCED34EC348D7790A37C975F5D8C324566A104408EAC417BDB461014FA86C38
3A1C9ACDEAFC4F8723CA7D2AB7B28A4C3E4EB29AFD690FECE9978423CE377913
62950FB1A8FDECD49BC425FD94017832C23BEEE9C313149D5BC44CCCF63D786E
7A1D49B49F810569F8C8669E4418D550B818B48E461AB62B8B886FAE208C242D
47D340DED6B9D4555BE6678EB3D04B31A962DCF0CDAD86A0A03FFCC0E14A4A01
D874A8BEC2C46AC22A84FB6B96695D911FB99BBF31917E2D5D49A971E1656308
698FFB93833725143CB64D8FE41E5CC90FC464BC4619E5041C903E565D667139
841D359164FFD3A1951B291F1C62ED05E6EB0EDB9BDE2630094BC0F348A0C85A
2F493E44B6FB00A5DA767A08C0D37C4D81BFDEAB9E2CF76C2F0C6C692C56D255
47888AA76E3D4405E8A6CDAEA8679C1B098592590CF620E8E0946665D508BECF
7B328EDB34E681D3D3F37BD5070A0CCED3B5A0EB0E983C2AE91AB9AF87111DC7
4ACFCE2A5ED8AD08A1723A5C2492BA04A115CCD57CAF0A6714DD3772FA515E6B
FA0ABA00BDD7C950D9298DC5CFA19E86406B96E86705E3E88ADDE968EDD3BF6D
8036EF2E6AC3BD851C84D9F628C1573E53242B1D8E6D23554FBD377D653DD50F
70D3981FE53022F690E020EA4788A26D0DDE22CC3126DA248AF6B2C1C57D7207
48A53843C1056A15AE78941C376C0565DD77E8263B967740EDE426A39A4052B1
26FECB7F3E426D9463D1BE60EB8880FB1257A1D0BA0A157E9EFBC0B444F65D93
809D15DAE5EEE07D9FE194F03657A1341C280A1B4A2D101CD6F5E09E418B68C4
22A814D84D969B2AA01A9B83E82F1BED7F32F9EF2A222D2D868F92B8459BCB9E
F09ED7B52B92B00BCC6C7E1BED2566394A5A7882DF2B87935F9E83CE1430E548
B208A5634759B5276910CA667CEF9169EA6C55C5EA472E3D5495B799C5ECCFAC
C357ECF91A391B8056957B41D1DA4F460189CA64DA2D8AC35DD10A87853FB6F6
F1C133040301738DFFC58125250C5C9AFBB02688829B757D4563DFA8FDC2A66E
45C96C8FFFBC3188C5888245AA958B11EA77239A46C799981D439513925DB06A
4185CDDDFB419DA421E8F13A717538E3C5B611E24601E06590A6E84804A6652C
03FF694567B5DB6CA13764B547B30C4F8419394A756B4F1B8F3716C90CDC7C40
E136E57A913CE6FA88B481C2BC2BD4DFE80B90CE3AF24DFBBDA658FA7494FEE1
0B19C2669564786157123F7B8A2929D381470A8BE18BD37914F651C31BCC0ADF
D2384FCF56A5A061B6E455FD1296001409B3B01B6EA0E45F14FAD62DCF90182E
E94B0474B65504967FC5DCDF44F010462521D8FBB2600A5147FB11B98412C020
096D439C45F776E36FF6D28AADB52C9ABCF6CDC203324A38B7203CC8DD692D8F
79FA919FFB790AC54FE26E51544AED21319D75074A82C7044C0CF762B0BEAF7B
65FFD69505E56943C78F344665CCAE86BCCFF513F916BBFD0F3BB58A9B62EC9F
04927E7F7BBA4890648272740291E6E034256DEBAB946734EDA101005DE7C92C
0131E012D51B5B031C01E952E39B4A99880DC77813DBE87A37B111FBCBE50E1C
D9BF1E85321FC7F8F7C451FD20C462A312DF2C0B5A186AB613D7CF7CE254A1F4
A6A3B43C1E57C7B7C224A7FF005895A9A4D843993E1F97ED8DD52F80173EA383
4B74133343F49DA610B83BAFBB6C487C293ACF0A3F1A99216E4E7F8EC9B561C4
E3F3E194E43AA6DB353B3F03DB314709DBE74B1156E0114D97751D2E8AD6515B
48C47D79DB846F57DD20F8E147FA1962BE3A9B67297DA41708D909D80215827D
112B916540DBD99E57F94B3A4241CAD445D0957CF451E1D8A7E18FF4A545D8E7
DA9C4943FABFC07AD1A7E7693EEEBB977022295CE718F52F885E2155D81DEFE4
90DEA1707997ABF1B03BBC59B919BFDA6F6183D06992AE60F5C4431BADBD9917
BB388C445F3004A97045DF9B070C7826F89D6DD32194CB4778AFE421F7D4946A
DD4CE717564EDCD91422A8090DA2094F89C2FE3C354ED71A6AAA00A58275FEB5
540B9170F9E50D2F906AE4AEC892D5C2B6C00D7EC5E96AA3F4A11797F253B06F
FC1DD9CD650EE2D1FED0D93BA01D581D02908036D3D2032A71C52A0287B6C91E
5197FB623ECC2AC20643CEB60F8EAC0CABE2A396324284C79FFB69633FD9DC30
20DAAB34F2EB73A3A82BDAB914B5DB3ED79F293FF6574054A14C7F99D8263764
EAAA37EF0FD43AFAC8363723B66AD214B5F8CEEE91B57421F06720DBBD5E9E8A
52012BED386506FA3D1510E56AED1EFB8B0C84D79B22F5A97605CD206D6D5CB2
DBD1449BF3E97C24187C8F713CEBB0977756EF981119467F67778318DE7CC499
8F347EF04FB210ECE0A62E42F3E9988BA37984C0CB9548C8F4ED009647C676EC
8ADF0601F7B833AE0B3310E49CD62B86B1C2D030B643E16A75C4AEF320648491
F1C7F7A5F6D8E6230AFC67A79A7CDCD74A77DD6C3566BE8C2667029265B68534
A5547CA722BA36BB233FF6BE0CB5A8177D891C215075B523F29C962739E49BD4
97F59E362345A1DF5893888A012EF8254B02A320A906A00EABA49EB1A905AA48
AE997EE8D364E0CC91241A3D160F6F8844D5DAA529DEF0F2C97D7E64EFD8E80A
C21996F6694EFCE77E5505F986D2DA3BA359FAE8CC473BAF16E6CBAF565EE42E
2AE3830A7A86178F49833AE69B16A6982A9A6CF51B3F92B572396433B08608B0
2D8220CBA4005E167089249C84351C3E6E904A8DE0048967D25D26897EFE7914
3C3486BC1195061121F1B41863A568184D1DC075FCA7796F944038B44BEA8D3F
082F4824C40C76AF430AEBA29C6089F5EBFDBFE6622CCEC9D8BA3A2D60E1DD97
F4CA8AA00B688613A65CE11C23F948732CFBC5C2246779A14703A617317D8FEE
8E4B0D20656EBC1B81366B6F9B0CBC12C57C72868DC18D3141A16036CF476D2E
9FEF6970DED82C0BEEBCEF712148F61B93273E2E4752A014BBFC469BD55CC0FB
AEA0D78A81CEBEAD712E5CB2BF189054052A006F3F808D384392A0B25BBD7C46
07B576992E23F655CDEC1CBAED3379780F589239448F6ED2CD675DA7424D0154
A76CCFD22B92FEA2C929DF22F67621E2422EF09821F4110D2D2F4B37C92F4866
C8E805D69B70299242F61CDB9876412321AAF54BB04B69452956749AEF87A634
F1CF92223047C94C4FB993F6FFA0CEEE887D220FFD0A8392422B4943BA22A552
EE86940876E5A6BB085DAD5CF18BC4A5643403064CA0C2ECD1A6C9FF14C0D9D5
BBE3D31B9A5141EE0AF976FAE196071A26D55C5B31FACC2C8FCF27718257C336
0312653A3DE6A5678CBA2B6F022279298C46840A3D935079451CA8EC73B8F350
1E5A4806876076C7D86F16A3D21C99845143871E1F7F42606FF9E8E11572A953
9B0745F098A337777295778568C36A1B50D6900B6C85C3BDAD91F9AC6E969F5C
596A411DEAE1B84D06989020889F195F9251CC0EFB166FF571B13AB8660DA580
78500A03091D26AA89C22CA7F7BB7478E13A4043A393D74B155AE288DC9845AD
7773A76EFE066683D4A23857742AD8A3268592C938943C0096841405A0F91053
B0CFE50A32B8F37AD6250588F394BAFB5FECF519910E360449C4FB58A3465780
943A52B2A129EA6904A0AD555A7C7F19C999954144F7D0E62414321D0532B900
3BAB066284BFBAFE843F8EFEA9A43A2C69A243682A3320C6B6FC59BE871F0997
0A9592B4798E7C47E6642AF1A76D8F9366C9CC90EEC0C4CB108BB2A94E50AB81
797FFDB3A2129FBC9E7270E8D3BFFC3CE6170655AACCA57F21BCD195AFC62C5C
3B374E0E51C934CFAFDE6619715333BE5391AC3A2AE72614ED4ED9E8CEF202F0
4DDCF2EEF462E90ED98E38344EBA50AFC50E27A1BE7359F383ED4E39A90DAA47
FAE0C6D22F7AE648DB7296D1B1DB9D3A9B9415BC9C650C08BF9CA6B8B043CE70
AB76260DFD050D0B2B918DD9E13D8E6FC85E4390CD748AF1F3D11A72A43261FD
3D2DA2A90E3F2F66F1DD2AC8529AE756994FA376DFED368705726B5EFE182AD7
20D9C1EB0632BFA8D836E2C18031FB2436A98638385D84EC766083E7DCD4C299
F6053A149266879429D1242F96487FD7339FF12210BAEC1F0F7AC51F8E2B4B57
D626D5E2D8C1442BDA97BC41E0509E75A997AB296F3C83E538BD309EF08F1F62
EE20F8188C02B78B4870916C866FA9F4490F766AE3F22F2779DE17461D1E50C8
16A4FD4172B595306C336CEF61A37B68C8DD681EE63DFE4B90CE86260D5DE3A4
AA6C03F48D7A57B9FF7D776F17FE4342D3293DA78D055281EE69EF11BA29ADC2
098A17D90E224B41C59A6206DAC162062E18C2E1C116ABEE3A2E00B351AEE403
B1FEBF97B4E1D0A35CDF30D02E3930BEA5C8980232F73012B5C8236EB58063E8
2C810B69812E5FE4A14E049FB5C7BB7167EF5CCACF9F8C7437393406621C3733
EF71182B0E34EC117C8F25FA03352BD125541740E86FCBF8CAD83E255B278F7C
15869B42F5CA3B303CAD561E604DF424615823202B1538A526AC20D733F3C7D0
8B2C49483DFA5B048D0B6579040204954C85A7559C2DDFF75AD6193CDCEBB362
250DFCBCF67C5E93F6BB2190009DDACACF76911D261C4F6A14F33378A7A60E5B
95FDCE38635800F6EDDCE75FB0DE66B3DF7EF485B42577792E0B0223BD735E3F
E3C87B54929CF1B4A0DC561FC9F20DA68555B888E4F12435FE34675FE36669E5
8DBB21D21CD6821F20DDF9DF13F43253CB2A9EB263CFF81916DA229B1F2BE3DF
9440801ED0817EB2B2AB253F46451D2C334AF8D3B030FE7EB464108FCDA3918B
6A80C5AD7518B0EC77402A582314086D6733A20FAD66A6847C773E795442DC28
F0BC23FD753A809E672DBA84770C74FF74B44EDD3A05150E0AA4BF894EB3ACA5
70B44A99394E2C81E26C00D26EAE554DF3013B851286A514B86463AEF0868C22
B53BAC5501C76A8C2E473F5CC1A07DA8CA08031B87DFACA3FBE625B26605CD71
114DD0672EA133A020B83BD16A013243679808EEDC71C7E984D4C436EA276F17
539C684CD99F2E3C7FE4B1DD47EBE68EF367E03721B2D7601F1D07546C5F9E77
A3C2A474F1F61175AB83D8D502AA336D534E5690F4BFC4B0FA58D8A233BC3669
8BB3919314067BD1532B90DF3AD49602027A913EE0ACE55DC1232DB12E7B3863
3CEA88A8DA62280E2635FA2F572AA99402BC49459FA55CA72359367A3B8363CA
E8D9EB7B8AB4675373B043348690CFEF257AA0622D8C459D26919B72DD46EF46
7A4F6047B2C475BF9551BF98F5B4DBC3172E432A71EA6B82DFE0ED8380F2BC82
CC6B96B0E313B970F6CAC2F837787FBE6AB8B31F166BD16403AE8C15400B96E4
B0C385342B19CD4F5FBE9A74A987948F0778F6FFCBF65CBF58C5E9A8EF6C9B2C
AEAB48D8830B3DB4A88FC75FC5E4D8DD688E387A3D93E88D86E63D1235B9794D
12A70767BB6F453247F6F5CC0A0A2662541966BD0413A30F445721081777CC96
3297F07D9CB50738C10B45703F5B4818BAA458B6A55A338ACA732A468EC8C223
6017C5CBE879AE4D350582157FC703FA4F69B77160C8B6E216F04B2B77ECC049
832C4772D98416547BDB9E0779113530171F81F3F5945B1A39911AF6F55EA2E4
24E1838927A11A125F43BAC10E9D7173722AD05C93864CF56EBCD1463BFADC20
0FD114C94851C12B14D5DDC3980216CFB1090AB2E8C3086520FEDE9B75DAA6D3
F32BC4804868881C3D546DEF8A20634E4AA1FCA9CFCB341E0541C20C08960021
E064965E10461A1BFAD53B25CE99A4B5652309CD1FD7F872C83BA7B244872929
EC9EEDF1EBE395996A911B5217A60DFAFA55D68DD26FA13EC3134FE62A53A672
D4F3D24D53A246756575759B06DD31732286C17A7E5D3B22A1D88B0942E070AF
DF4381951D9DA705670F4991A0BF6B3F790FD8A770A159D5420A2FBE668606B5
99E6BF6AC090FCA55AC0470534498EA0E2CD14705842D014D37AAA479AEEF038
25420222A2288B3711C39F16B40BA8125251D613F10822CE5209F8B40B739FED
8D7BFD6C67B52E89F7F92586015225F8EE3658CBFECD15284C73E2A7F69CE97F
4BD3D4DD96B2268BAEA3D15E26A58FF04F96B250648799555C6D38E193960216
1C96E64786FB6F2D550C140004F419A80FF0078A454C33898CE66078F401FB2B
6F0465ED9DB41C1F21444595B9DD0AB03B53C78F7F3ED79C733A6B76AEC69CD1
816AF92B6B82B7691B9A564277AE189267A092A0F9DD038BAE787B3560A138A2
E632E3415DC1D6B8D384333EB02464ACFA26596B0FFD0E4450AC4A8BF4F5D6AD
917C7B29461A1E5012F539E83A92AAE9C2BB09479BD2FECE81E31E3274CA7F7D
5A67FF971EFB7B70577E69982E4C125DBA776DBC65E990F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E6898224073BB9C196653F266B625D332C961EB9
4026A13E2C52BF1DAEEC9F50E53B51DD5913F05F71D8C40C2EC207ECFCAB9AC7
528E3712DDD13189F7D5CB2509B6551F71A2D696735480B8BA5FE8A8B2107541
4F73321DC5FF5A24AF2D6CDB429757D2C24CFDD3D1DB7157B21DCB059C9AACFA
4530B025B525FEB521E06B4A2EDCB1AA787428233F8377E4E03E6CE9471674E5
EB3E151F90B78C210ED9972B0A84BD44A23F67673A822F4971361A279F53E8F1
2EEF7E17116174B7469F3C1458139B6B81B360926330DF4CF4B6A6A863552552
30D00D4C62F1885A3465B64BBEB2771D9E8A1C94954B9E6E6695473421916127
57ABEDE0E7A1DB0E4C2683129C912ACDB47AECE3F9786E47398891C070755730
80E67AB9F074981BA85FE7B19453C20138105FA968D454AC3CD06F4C079ACE1D
DCA6F51DC6F244D8D2620D6033A76DBC83BCF17DFC2CB1112F643E2259846E80
5477C60F2A8D3C80999E98D913AB360CA05FFFF277230D34376F353D1C520EF8
5B456DE5AC2B2D23DB41D95C366B9580053E25009486C377A60EA11341AD3BB6
45B0D7F97ACB233FFA576119456D0EE22B1046999CC8065ADB2FE030F6715EB6
E29888302A571F3B782893E1631735FC7FEF8384AEA8C22734CB1602F35D0F54
F815D0B0AD37CA58CE08B25D363639F3CEFFD7558991E2863E3559AB0B98251F
9119B0EDA9495B072911CC814C19D53B95DE0071E3A439D0B85A72B52D8380C5
112F4CBCCB78C3DF9F8D82D9E97297CCCF8852F22D77E46192F7978878EF7D37
A5A22F94773BE2BC3E02750BA9A54927A293C6F60D307A5B88CD8D77F9FE1356
B8587AEAB4F821A7075C86CD6A8D4C5796A461A145258B082ED3B06CA735E672
A03DA67D98BD19D2A5187BC2A833C93310478B657E14ABBE3951C08C1065CE8E
8406CACAD6290F5E125339B9E5093AA2F7F477978D53A43EAB4B1A862E59E126
77BAE14E67FB316F271F04FC45B3659E7909D4AC4ADE4A7663FEFAEDF96979C7
C859C93FEBD0328732EF2985CDF4BA6B4EE1349A647AFAA5DECEC7D5C8420B81
ABEB76906192150292E22E02C63ACB5FA24E41CEC5C84E874B160F4127D1975F
2CCF7F0A72701A3C8161D33271BB572126735E72BE44078D1F71342A976035B3
BAA3217EE0DAD89D3DFC2D420C6A12D63EE1C2B649B8BCA5CAD037D3A89C9AB4
53BE811A5BDDE43193128C8B11A8B9D7DC54F36AFA934E907162B395AD1989BC
2DB1381ADB11431C97A8DBC052426E3C954278AD30DB394D570DC876A06C08E3
CF3E7821D6EE30F94CA3DC5AC833C4B0091084660574D12B0EADD3BC75A8B4B3
EB237EB85B600FD483DA2A8717A30EB97A6ECDF3022F452D00E6C3F486108289
E9F1B5E29E5D046CE74C17B45A78C317A54F00A58FD073CF35C9CC22BF2F7D27
02DB352D0874442B2074859EB49313B99A8D2AA2DF53F6E853C7037FBB63DB74
A5D79874B0FCDD0536E7C70D3AC58AB2DFA3EDD496C18C8974EBE8043883C3FE
759DC1E6400EDEE1D79081462E37047CB060A9FA8F120B9B0ACC23C3BE38506A
74046DCE3EC1FFD3D1EF05061D80B5E3C87AC8A76D16591A313690B5E5EF775D
62175B6409A678916CF881217B847F98219241C0DA67E5BEC040A958B14BB3D7
82151536EFA7F4B85C04D8BBB173F3A1285DEE9D690E225A03105609EA380514
F643E9AB0D578534DD2C434F3C1C342A8019FC952FF8D47D723DCAE7E031BC6C
AA66F9DF82D0D84D0E0B99B789736594D7F6C77E249762144AB288B2B12B3DD9
33BDA035B201304263EFF2F6ADF31971CEFADC7BFE832A7BF7AD6421FE060E59
E5C878AC3ADF0223DA6C547263340213128BC9D5A34B3072662A67D2F5A6F86F
FBA5C6267A2A20B8CC7B4A2A4F8503DDB58EB2B929CE53EB5D706ADE5FA46BD3
BFC7D1115ADF2DE08AF7B31448DFC1C98EE686B4A8E638F9CCE7EE52EC5A8A0A
B9D7A965A1D6EC9E4E71110506CACEF75AB425EA09AD858217C4E1EF904053DA
AB56B1075AAE403B1CD4BED27B9F417C1FB4964FA664C0CA7C633CF2787DF697
4BC1F5F0EA40D82920D9973F85A736519FF3FE5ABA44658C25AF7C13BEDE3DEE
8A5ED6FB413BAAC7591E45592136D3B9D93929A174D4B507F6B9B57C8DB49F7F
85713CBD6D5230069235CFF8ED432E71B0439950525ECC07EB3935E02407B10D
04DD256E95B9E2C710DA59618F442E4009B55F53BBA831319F3D9B1A1CA16D9D
51FFEEF04B7AF5F38B219ACF3A631B755B2E1A616B8CCB6E75689101E98FD9DA
EA9DDD1E4F08E9A6DB793C1B1F3B8F937AE7E4D069965868433C0C11E5B9A2CB
4F876881AAD188D821D2C603A664B44221BEDA0C08CA5DE1FB7C2B7607098272
F141E49E8816E1FF70E1F51F027A06DBB5236240497BD08E56B987062BB57237
BBB3056A36E97E399A7D5534B80411532BF22520355476023178043584B708BA
CBC7D1E201BCCD97279EE9A30291B4599FB13C4069878D79CAF427454F554B6B
6182B53B81600AB818CBC754F81A1A215F70C547F22F0E3C26CBA8DCB4B414EA
5AE94D84B5BACAFD5330082079B94E058D1C1F4415C23F84FD75CB36F23C0BEA
5C55AD278CA8D553A987E57B85D56DA207C999CAEC4C445BB1B0B552EC1E4DE3
4AECE622C40AD2D349F0A99EE75CEDF13EC404C8BE926D0CC551159531DD06E4
D7E02762A656C69E4CD65561E2E5608200B86DDC18C5C81A4E75F8E178B51842
58B2A995AA848C73D6248071B32AC79740F2887F7830D8096621E81AF13B3BAB
884BB60636290FD97017393DC2A256F557DCBD0CBDDCFA83A577216FE644D630
3E71757A8D901A868000B4A487327645FC6FC6FEE98E026BC5B3C51E92B1C66D
314A9A4AF2CDC6C3ABEE1E14C643529096A2EFD737A46FDF8354959A885A0A4A
A26F19F8348EC62189B42297868ADB0C97AB1E6E22EE5A58C7B3B5A46A860FA2
AF035F5C579902D75FF0EBAF919567B7A1CDA5E14FEDA66F6B228E625850CD18
B3174AC4E4B00BA693AB9974D3797FBF182FFA1055A1BF1F53C0B670FDAAC8CD
8150802686B9AB684FBE46841D2C1DA85E1ECB50200B017231B49F431DFC46EE
AAD17F996564FFC6E3383906298E4116EBDE50A4756AA163C01B3515A52556C0
CC19E52811C87F72082C9BC07B07893B2E4F1626550333547C1141A7903C924A
BA53A4B5C7C390F436CB4C0528C5D449530F3734C2B9D624AF3E43BFF510B167
E8C52054503320172DC62758706A9E4C51CE65C16E5B37F88F7B480E17F63249
F8460726FADC19D13317443CEFD3FF325CC28B1F39F4134821715273DD499C2D
A3A86257C5F46CA0EEEB8F745FD34FEABDE9956F813A15583AABBBB4ECFB55DB
2A31AAA7432D7D3BD84050FBB2B56D63A49B7F8F1DBEF0403BC0ACBD0F036D55
C3F8753867937A10262092B0582B53EF3734D8E2D6E40DC9C36C711700D81F44
F5F99668A6F331F6DA9CF2C4F6214E85D8AEC9FE6B344A3B28B0441144DB6E67
4D33A5E7F5E2D1C0666774874BDC4C5DCA7B8A33F5E17FB4017D2B7B99ECAC59
6D727710609C74151B61B4C15F4361D65BD5D6083C7E812DFA9C6AF9C6421BDE
7213D29A7AAEE8F95AF65F1F282DDD6A9B55FF0456C5008EB66FC19E13E737FE
F91B42E09200D95D57CD747F029DE97E333A3E128481FFD5458C1D5B06CB9D68
5A9561E9CBF763EC8CAB1C44FF9287F2F4E623565955106A2FFAFEC90E35778E
3BB1B1EDE4A453F3188709A85504074B869B1981240CC0667E2ED796A8D6BC9C
E98F2B71D9862113D5E20938B639750FF981F5C988527B2ED63600DD8F14D992
98D807D2ACA57AB52253DD323B75170FB57B1D234BA68C4F8F52F0A87021F773
E844F7E60E12E4EFF4AE62C711C5DC5DED743A7ED41E852DC45BCA016BD81372
67685AD18B7648BDD7170DBF7DC6E91446BD309C12350CCBE9183B3F48D68850
162A7AF46762375B3B86AEDA4CBFBB41433632A244D2CE10DDA45FF84DB78BEB
1658B2F9535C4BB445FEFEBB1E5752CBC7539470C763580DA043732C0F5C8115
31DC9DBABE5B5A768FE14AA8B72AA89F030772112A25AF16F68150C378455FDD
227E611A9CD861FB6CCB5326F6045E06AF3D7CBC1FC4988F6F98850E6C6A01AF
6C1A517F86D2C6190AFE9B31BC89297D14A9D2E305965AA02B8A67AEB04D915D
ADC1B84A531F73913213A61C9C3BD9336AEB3CBE770DEF99EB9332536A1D53BD
FCD4A1FEF82C14CB57CEB27382EDC9D92DFE8A15818D4AA1FBAF363B89982771
1651101B499AC14199A8903EF51E091BEACB8ED266CB65288944A5351785F188
ABC36137C2137DE0D7EBBF2323C750C674154B8BC791C0B64DA424125D1735CD
44A317D2588776F34195BAF13B3C3B1A579D373539E8AFE0BCD29DE362B17260
850FB1E3070C4CC51AA2EFA4C84CF6BBB02D09EFB8C146392A5FABE4B53411C6
62226354E22ADF6E32EF294990B0E8437131007AE5B02D72C1E2C40D1D469070
70E9B45E9A66F10FFF8E43DD00CF6C7305C8AC8CCD3D1C62ACB3935FB052FC4E
961873186C1FEFC5C1A7D56309F6EA21AAC0A7C6D8334E8A51C229D30915EAA3
4092D1CA9BE1635F769E2AC1459B0B3AC1DC1178DEE769503ADB4AB8F86636C0
AE32DCBE08AFA9C65CFDAF3D35FC563F14FAD91AA813C75A4850788B0B46E263
B0D3B64A438C1605A709DB9A944C90F08A16F9F5AF3C918D9C9C3016C8D82ED5
47D41A566588F8AB6BEB24BE0127D82D914E35731D6F0031E0C8F9E614EE7367
9681A427C60A6D3199F23717B33AC1A1366B75943DDC6288ADFD74FA31500513
9EC9A9C18BF5AE26F12F3A9F44044B08BB6B99C21D0CB69B1A03E7EB0C691CC9
1AE662CB73E8B9E3E68DD403BAB5B1BD92D2DBF6FA2ACD0B0BD37924744B1D6F
414E5DA0F94BA1E29CD75F4C91A0B54E03851ECEDE179789F0FBC4D4836EA27E
42ABEEACE271C27A364599E913029BB3C2C80EB9F71704E9246C4F2161C13B5B
57385C54125E15F0FA078F8C145E006A9D859311EABF50036B7797F91E8ABEF0
695B5E7756DAA6388334880389457972398768F4EDEDFDA9536611E37FC36A02
3C74030C2657A61DA0E30E77BC8E854C0EE3A9E0733BBB4D99E47B2EE1767F1E
2A84176FD03F1563865AEFD39068AE7773728CEE805434AD365CBB2714E46B03
2CBB81985D4D8E0271F356970BBF04720A5350BB653FA363ACFD2FFEEB90B653
62AD2B23E4FD4285A0222594D963206BE3F0DDA325D4D34B30CA2FCB9584E93D
19A5833FA589993F6D8F839808711285EB2DCEE72EADA68F6A0DDC1BF80268E5
088BDBE5E056B844966D3E6240AE5708521AABA051BCB83CE53A6F20F4CFD8B7
A0E4BFE23BEAF3F65E5A71B0B6A300FCD52B07718327815B85FC32B6D68DC6F5
F4A94CB02B67C9EF7AA7087A5E70480E498DFF40BA25B269E8B7A921A041A6B5
0D068E8456E2AA5B1A6DA9619E7B22A7A584CF4E8EF56EDFA3CAF50A7594FF74
C57242687BDE967F6D218121F6F565C238D8DA69779F6222AF9E0891CE6DCF07
548C48B329C1103198FC55CB6E19D85AED48B52117A0A90B175514AFCDD0B9B6
E280C0AA5BDAA97C19ED5EEE3D74CFD701B10AD8B7FD3B8FC515D471757B01AA
BBA91930BF18D2801EB49F9FCE3B45E0BFD016F19EAFFBC004C8BE926D0CC551
159531DD06E4D7E02762A656C0E1E2F43D33AC52A68BC65D4942B5B5187F5564
8DEB162FFAB048D5A30D1827179CF6B4B45C14C9B744BD98DB7F650B717454B9
81CAE483B8C9212120AAE548FD228EB4DE04B482145F392624C115437A58F156
E9EAC6EC0302E6DA3FE713CB456D3B01A47B42591454C8E724E0033C5E07B98D
54EEE0030DD4B6FC06C1DFEAC1FAE94955BDC8096D0731A7EB40114D738B5AA6
92465A016270FA20F2945FDF3CF603C7921C246FB1B3C44829FAA0C258650DE9
2B443A2FD795F4019465EAC8952DB096E573A2045B76914C64C298FEA1299DCB
7C94B69F5AC4D090389A4E841009D3C81A08BBA0FC23CA5A3BAD048442CC1F0F
CC4305A72F95B92888AC9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4137
B7ACA789EAE744D803921A773BE8A081FB687F9C580CD503C8683A15B591ADCB
184E6899895E3B48C8084E16A672D2C3C67E71D8BE2B10FC97D8134214DA14DB
41F55780C59378BAE88F6E3EAF3E903BAB38790E8729790330872A563F68C1C2
F019E6746E18E966F8BEEA7D504072AC7BF81DEB560346347B43A5438D7422CD
88F8FEAC34EB77E3B95336D2851DEFC3931C2AA62FC3F121871F757F07F7875C
51C3B5449E1843BF57FA6B0556FE02B9F11E551FEF98F8895DFEBEC92AAF9FD1
372DCCC18617143D51C330F2FD8E4FC5BC11883B28EA1028C4C530A054B6C30B
9BA7320211ECB884C8CB11C7FE0934A0B9F3EF665C5D056C7165561ABC5CFAEC
8BD8F584C70B281C300F284B0149B213AE9F0152054F76ADC3DBFFEE52659119
E071B0CAD1E54277E298AB84094AC2A4D0FD15EFFA6C83564B7FAA392FBD70BF
1EAF9216A1266785A31EC145EE66193FF6F1592AE96A91F080D2D450809C4A8E
97D71FD885B133ACE01B6B8C05E1D92A2C15C7BF5794C3C8468C16B709755C2F
8BA1DC30E7C6AD15F9509EA2F8DAA03F35B1BA8AF3A2ADC86CEBAC26C94FAD13
578CBE23840CB09C5E4E2FB35D4A7A5DA87DEC43D92817746076B59F68C4A459
409C90545B79F2648165890C198233A7644F559F3EA44C7C8312987F662574D0
95D3E05D1CD02E1C4321610586C9C8E2D6BB43198A76C07095B334AB72ADDDF3
05CC97904D56E207C140654E535A61B27DD0C36D891AC4C7CE757199638173A4
543C6D0B567BE04B945E9823C5D920418EE3502B4A7C5EF78E8F619A6D4BE8D1
52DC0F9614D8A813C6FBDA39E8CE585B1978F1E202C79D2860EE1031DF948337
2A93B8CD63978BF7302DBCF730A77A5DA507396AD9A3AE11C6BA89EF8EC6C23D
9DB4932660495854D5A0568868A24CF64DC7CFC588F37BDF9FEAB795AA87F230
41238027ECD63C2798091C71641E4A3490C4CAB9A3217EE0DAD89D3D5AA2CBFB
E13B3877CD2BC281659CD3D0A510E2610DDBA133578F4867ACEA6662FCBD8774
6B979DD75AF19EEE2EA69D9B2D4B134419F9A717EF20A47BCF01F43668E83306
DA36AB49AC9F2E1178B66057A5D5783A539BF1FDBBF233AFC5D4AA9421D790D8
D23E6D10DF6754B3510BF73AAAD6919664B9606A7ADDCA9751CDFE6153675123
8182CC952A9A9715EFC7A8A6E1FDD721F079CA3925E9D2221524EE95E35B53CB
5645186AA173BEB5FA82B3E0EEE8B8D7BC9170619FAC5C1BDF1BC3A64268097B
15DE18B8E01511ECE7AFA0F554F33F3A91D993D11E519F94F7FDC021BC5E8BC9
4D3A089DABF87555E60D1479F7034A12BDA3904CE70AA9F707F3BC3AEBE4BC78
4686CCDBF11270344B590BF3CF42EAE2B40954ADE6C7A9263975B9984BABA816
67A8C07B4AC493A360C500FB924AB47E71445B364CBBA82A6AD044F8A1F1856E
171050AFA93722CB4B0848DA709B07A5F7A52CD1EFA670EE0DC48F6071D57330
1B5894BFADF734477D53113974C90B775E0BEABC183D406F1FFEB2DED1C36BB0
0C4CD7940C108B4DC3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (capstone.dvi)
@start /Fa 139[24 1[30 1[45 1[44 1[22 2[22 1[42 1[36
3[37 9[75 3[39 12[42 13[37 37 4[37 37 37 48[{
 TeXBase1Encoding ReEncodeFont }17 74.9999 /URWPalladioL-Roma
rf /Fb 240[34 15[{}1 58.1154 /CMSY7 rf /Fc 136[62 44
48 26 44 31 1[48 48 48 70 22 2[22 48 48 26 44 48 44 1[44
11[57 48 53 57 1[53 62 5[22 2[48 1[57 57 1[57 6[26 4[44
44 44 44 44 44 1[22 46[{ TeXBase1Encoding ReEncodeFont }38
79.1666 /NimbusSanL-Bold rf /Fd 133[40 44 41 66 45 48
26 34 31 44 48 43 46 70 23 44 19 23 46 44 26 38 48 35
44 40 9[79 1[62 49 42 53 62 48 62 3[57 1[27 1[60 44 48
61 56 48 62 5[20 20 4[40 40 40 40 40 40 1[20 26 20 40[48
48 2[{ TeXBase1Encoding ReEncodeFont }56 79.1666 /URWPalladioL-Roma
rf /Fe 105[40 30[66 44 48 26 35 31 48 48 44 48 70 26
2[26 3[40 48 35 1[40 13[48 57 2[66 5[31 2[44 1[66 15[40
40 40 40 46[48 2[{ TeXBase1Encoding ReEncodeFont }29
79.1666 /URWPalladioL-Bold rf /Ff 172[61 66 2[71 5[25
2[56 1[66 66 14[51 51 51 51 49[{ TeXBase1Encoding ReEncodeFont }11
91.6666 /NimbusSanL-Bold rf /Fg 168[69 49 53 45 49 53
57 49 57 53 61 45 2[20 2[45 49 53 53 1[53 65[{
 TeXBase1Encoding ReEncodeFont }18 73.3333 /NimbusSanL-Bold
rf /Fh 202[32 32 32 32 32 49[{ TeXBase1Encoding ReEncodeFont }5
58.3333 /NimbusSanL-Regu rf /Fi 134[33 1[48 33 37 19
33 22 37 37 37 37 56 15 33 15 15 37 37 19 37 37 33 37
37 12[41 44 5[56 3[19 7[44 18[19 1[19 41[33 2[{
 TeXBase1Encoding ReEncodeFont }32 66.6667 /NimbusSanL-Regu
rf /Fj 139[22 37 26 14[37 41 37 31[48 65[{
 TeXBase1Encoding ReEncodeFont }7 66.6667 /NimbusSanL-Bold
rf /Fk 138[23 14 1[16 3[23 4[12 1[21 1[16 3[18 13[23
14[32 68[{ TeXBase1Encoding ReEncodeFont }10 41.6666
/URWPalladioL-Ital rf /Fl 176[92 1[110 71 3[97 4[83 1[91
25[32 39[{ TeXBase1Encoding ReEncodeFont }7 116.667 /URWPalladioL-Roma
rf /Fm 166[62 3[73 57 49 62 1[56 73 78 1[57 68 1[31 78
2[57 72 1[57 73 65[{ TeXBase1Encoding ReEncodeFont }16
93.3332 /URWPalladioL-Roma rf /Fn 171[133 6[200 3[78
7[156 65[{ TeXBase1Encoding ReEncodeFont }4 200 /URWPalladioL-Bold
rf /Fo 166[107 2[124 124 107 98 116 1[98 133 133 1[98
2[62 133 2[98 1[116 1[124 65[{ TeXBase1Encoding ReEncodeFont }15
160 /URWPalladioL-Bold rf /Fp 175[60 2[95 20[50 5[50
50 50 3[25 44[{ TeXBase1Encoding ReEncodeFont }7 100
/URWPalladioL-Roma rf /Fq 166[53 6[53 1[48 7[67 2[49
62 57 49 62 65[{ TeXBase1Encoding ReEncodeFont }9 79.9999
/URWPalladioL-Roma rf /Fr 171[102 87 111 10[127 2[129
118 13[83 83 3[83 48[{ TeXBase1Encoding ReEncodeFont }9
166.667 /URWPalladioL-Roma rf /Fs 170[104 82 70 89 105
81 105 111 126 3[45 3[81 1[95 1[104 65[{ TeXBase1Encoding ReEncodeFont }
13 133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-31 705 a @beginspecial 0 @llx 0 @lly 345 @urx 435 @ury
1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 310 1025 a Fr(C)8 b(S)51 b(C)8 b Fs(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Fr(R)8 b Fs(E)g(Q)g(U)g(I)g(R)g(E)g(M)g(E)g(N)g(T)g(S)54
b Fr(D)8 b Fs(O)g(C)g(U)g(M)g(E)g(N)g(T)1568 1225 y Fp(M)t
Fq(A)t(R)t(C)t(H)33 b Fp(1)t(8)t(,)f(2)t(0)t(1)t(8)-81
1725 y Fn(I)10 b Fo(N)g(T)g(E)g(R)g(A)g(C)g(T)g(I)g(V)g(E)58
b Fn(M)10 b Fo(U)g(S)g(I)g(C)60 b Fn(T)10 b Fo(H)g(E)g(O)g(R)q(Y)59
b Fn(A)10 b Fo(P)g(P)g(L)g(I)g(C)g(A)-5 b(T)10 b(I)g(O)g(N)1016
3724 y Fl(L)c Fm(U)g(K)g(A)g(S)33 b Fl(H)6 b Fm(E)g(I)g(N)p
1910 3724 1350 4 v 3410 3724 450 4 v 3088 3766 a Fk(Signatur)o(e)520
b(Date)1649 3966 y Fp(P)t Fq(R)t(E)t(P)m(A)t(R)5 b(E)g(D)35
b(B)t(Y)1522 4166 y Fr(G)8 b Fs(R)g(O)g(U)g(P)51 b Fr(0)8
b(4)g(5)1365 4366 y(T)g Fs(E)g(A)g(M)51 b Fr(T)8 b Fs(R)g(I)g
Fr(T)d Fs(O)j(N)g(E)496 4549 y Fl(C)e Fm(H)g(R)g(I)g(S)g(T)t(O)g(P)g(H)
g(E)g(R)34 b Fl(H)6 b Fm(E)g(B)g(E)g(R)s(T)p 1910 4549
1350 4 v 3410 4549 450 4 v 3088 4591 a Fk(Signatur)o(e)520
b(Date)704 4733 y Fl(A)6 b Fm(I)g(D)g(A)g(N)34 b Fl(O)6
b(')g(M)g Fm(A)g(L)g(L)g(E)g(Y)p 1910 4733 1350 4 v 3410
4733 450 4 v 3088 4775 a Fk(Signatur)o(e)520 b(Date)1815
5009 y Fj(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 127
5138 a Fi(The)17 b(requirements)g(f)n(or)h(the)e(Inter)o(activ)n(e)i
(Music)f(Theor)r(y)h(Application)f(are)h(descr)q(ibed.)g(The)f(scope)h
(and)f(pur)r(pose)h(of)f(the)g(project,)g(the)g(intended)8
5224 y(hardw)o(are)27 b(platf)n(or)r(ms)e(are)h(laid)f(out.)g
(Speci\002c)i(user)g(stor)q(ies)f(descr)q(ibing)h(the)e(pur)r(pose)i
(and)f(function)f(of)g(each)i(app)f(page)g(are)g(presented.)g(The)8
5310 y(application)19 b(is)g(divided)h(into)e(pages)o(,)h(and)h(each)f
(pages)h(inter)o(actions)f(are)h(detailed)e(including)h(visual)h(la)n
(y)o(out,)e(la)n(y)o(out)h(of)f(touch)h(b)o(uttons)o(,)f(and)i(audio)8
5397 y(pla)n(ybac)o(k.)f(A)g(timeline)e(of)h(implementation)f(is)i(giv)
n(en.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fh(1)p 0 TeXcolorgray -148 -144 a Ff(C)t Fg(O)t(N)t(T)t(E)t(N)t
(T)t(S)-150 80 y Fe(1)178 b(Introduction)3487 b Fd(2)68
224 y(1.1)197 b(Purpose)74 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(2)p
0 TeXcolorgray 68 368 a(1.2)197 b(Scope)35 b(.)42 b(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(2)p 0 TeXcolorgray 68 512 a(1.3)197
b(Overview)77 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)p 0 TeXcolorgray 135 w(2)p 0 TeXcolorgray
-150 736 a Fe(2)178 b(Overall)24 b(Description)3220 b
Fd(3)68 880 y(2.1)197 b(Pr)o(oduct)22 b(Perspective)28
b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(3)p 0 TeXcolorgray 68 1024 a(2.2)197 b(Pr)o(oduct)22
b(Functions)j(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(3)p 0 TeXcolorgray 68 1168 a(2.3)197
b(User)21 b(Characteristics)28 b(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)p 0 TeXcolorgray 135 w(3)p 0 TeXcolorgray 68 1313
a(2.4)197 b(Constraints)20 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(3)p 0 TeXcolorgray
68 1457 a(2.5)197 b(Assumptions)19 b(and)k(Dependencies)h(.)41
b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)p 0 TeXcolorgray 135 w(4)p 0 TeXcolorgray
-150 1680 a Fe(3)178 b(Speci\002c)25 b(Requirements)3128
b Fd(4)68 1825 y(3.1)197 b(Interactive)21 b(Cir)o(cle)h(Of)h(Fifths:)f
(00)45 b(.)c(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 135 w(4)p
0 TeXcolorgray 68 1969 a(3.2)197 b(Composition)22 b(Page:)f(01)k(.)41
b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
135 w(4)p 0 TeXcolorgray 68 2113 a(3.3)197 b(Refer)o(ence)22
b(and)g(T)-7 b(utorial)21 b(Pages:)g(02)80 b(.)42 b(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 135 w(5)p 0 TeXcolorgray -150 2337 a Fe(4)178
b(Development)24 b(Flow)3246 b Fd(5)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fh(2)p 0 TeXcolorgray -148 -144 a Ff(1)96 b(I)t
Fg(N)t(T)t(R)s(O)t(D)t(U)t(C)t(T)t(I)t(O)t(N)-150 26
y Fc(1.1)79 b(Purpose)-150 197 y Fd(The)21 b(purpose)g(of)i(this)e
(piece)h(of)g(softwar)o(e)f(is)h(to)g(pr)o(ovide)f(an)h(educational)f
(musical)g(r)o(esour)o(ce)g(to)h(people)f(of)i(all)e(ages)g(and)h
(experience)-150 341 y(levels.)h(Speci\002cally)-9 b(,)23
b(the)h(application)e(focuses)i(on)g(the)g(functionality)f(of)i
(harmonies)f(in)g(modern)g(music)g(and)g(how)g(to)g(apply)f(them.)-150
485 y(The)f(application)g(intends)h(to)g(addr)o(ess)f(many)g(pr)o
(oblems)g(with)h(how)g(music)f(is)g(taught)g(curr)o(ently)h(such)f(as)g
(the)h(excessive)f(sour)o(ces)f(of)-150 629 y(information,)k
(unnecessarily)e(dif)o(\002cult)h(information,)h(and)f(necessary)f(pr)o
(esence)g(of)i(a)f(teacher)g(to)g(teach)g(music)g(theory)g(concepts)g
(to)-150 774 y(name)e(a)f(few)i(of)g(these)e(pr)o(oblems.)-31
918 y(The)26 b(intended)h(audience)f(of)h(this)f(piece)h(of)g(softwar)o
(e)e(is)i(wide.)f(Any)h(person)f(with)g(inter)o(est)g(in)g(learning)h
(music)f(theory)h(would)-150 1062 y(have)17 b(inter)o(est)f(in)h(this)g
(application)f(along)h(with)g(people)f(looking)i(to)f(write)h(their)f
(own)g(music)g(and)g(impr)o(ove)g(their)g(composition)g(skills.)-150
1206 y(The)26 b(pr)o(esentation)e(of)j(the)f(concepts)g(of)g(the)g
(schedule)g(of)h(tonal)f(gravity)f(and)h(the)g(function)h(of)g(the)f
(interval)f(of)i(\002fths)f(will)g(be)g(easy)-150 1351
y(enough)f(for)h(childr)o(en)g(to)f(be)g(able)g(to)g(utilize)g(the)g
(application,)e(however)-6 b(,)26 b(some)f(of)g(the)h(mor)o(e)f
(complex)g(concepts)f(will)i(be)f(focused)-150 1495 y(mor)o(e)d(on)g
(older)h(and)f(mor)o(e)g(experienced)g(audiences.)f(Because)g(of)i(the)
e(ease)g(of)i(use)e(and)h(the)g(wide-r)o(eaching)g(concepts)g(touched)g
(on,)-150 1639 y(the)f(audience)f(for)i(this)f(application)e(will)i(be)
g(anyone)g(inter)o(ested)f(in)h(learning)g(mor)o(e)g(about)f(music)g
(theory)i(and)f(composing)f(modern)-150 1783 y(music.)-150
2058 y Fc(1.2)79 b(Scope)-150 2228 y Fd(The)22 b(softwar)o(e)f(pr)o
(oduct)h(to)g(be)g(pr)o(oduced)g(by)g(T)-7 b(eam)21 b(T)-7
b(riT)g(one)22 b(will)g(be)g(T)-7 b(onal)21 b(Gravity)-9
b(.)-31 2372 y(The)24 b(pr)o(oduct)g(will)g(focus)g(on)h(teaching)f
(musical)f(concepts)h(in)h(an)f(interactive)f(manner)-6
b(.)24 b(Speci\002cally)-9 b(,)24 b(the)g(concepts)g(taught)f(will)-150
2516 y(center)f(upon)g(the)g(cir)o(cle)g(of)h(\002fths)f(and)g(will)g
(use)f(the)h(graphic)g(to)g(help)g(users)f(understand)h(the)g(concepts)
f(with)h(a)g(familiar)g(basis.)e(The)-150 2661 y(concepts)29
b(that)f(will)h(build)g(upon)g(the)g(cir)o(cle)g(of)h(\002fths)f(ar)o
(e)f(the)h(schedule)g(of)h(tonal)e(gravity)-9 b(,)29
b(parallel)f(keys,)g(r)o(elative)g(keys,)h(tritone)-150
2805 y(substitutions,)20 b(secondary)i(dominants,)g(diatonic)g
(substitutions,)e(and)i(diminished)h(substitutions.)-31
2949 y(The)j(application)f(of)j(the)e(pr)o(oduct)g(will)h(be)g(as)e(a)i
(mobile)f(application)g(on)h(the)f(Apple)g(App)f(Stor)o(e)h(and)h(the)f
(Google)i(Play)e(Stor)o(e.)-150 3093 y(The)c(application)g(strives)f
(to)i(impr)o(ove)f(the)h(quality)f(of)h(musicians)f(ar)o(ound)g(the)h
(world)h(by)e(spr)o(eading)g(easily)g(understood)h(and)g(very)-150
3238 y(general)f(compositional)g(techniques.)-150 3512
y Fc(1.3)79 b(Over)q(vie)o(w)-150 3682 y Fd(The)25 b(most)g(basic)f
(and)h(cor)o(e)h(function)f(of)h(this)f(application)f(will)h(be)g(the)g
(cir)o(cle)g(of)h(\002fths)f(which)h(displays)e(the)h(corr)o(esponding)
g(notes)-150 3826 y(within)d(the)h(selected)f(key)-9
b(.)22 b(Fr)o(om)g(her)o(e)g(the)g(user)g(can)g(select)g(options)g
(that)f(would)i(allow)f(them)g(to)h(view)f(parallel)f(and)h(r)o
(elative)g(keys,)-150 3971 y(or)h(select)e(dif)o(fer)o(ent)i(keys.)-31
4115 y(T)-7 b(o)18 b(supplement)g(this)g(cor)o(e)h(functionality)h(we)f
(will)g(be)g(cr)o(eating)f(separate)g(pages)f(one)j(of)f(which)h(will)f
(describe)g(how)h(and)f(why)g(the)-150 4259 y(cir)o(cle)k(works)g
(along)g(with)g(some)f(general)h(r)o(ules)g(of)g(the)g(schedule)g(of)g
(tonal)g(gravity)f(and)h(descriptions)g(of)g(vocabulary)f(used)h
(within)-150 4403 y(the)28 b(tool.)g(Another)g(page)f(will)h(allow)g
(the)g(user)f(to)i(input)e(compositions)g(which)i(the)e(application)g
(will)h(then)g(analyze)f(and)h(output)-150 4548 y(information)g(with)e
(r)o(egar)o(ds)g(to)h(the)g(users)f(composition.)h(For)g(instance)f(it)
h(might)g(inform)h(the)e(user)h(if)g(they)g(followed)h(the)f(r)o(ules)f
(of)-150 4692 y(tonal)21 b(gravity)g(or)h(possibly)e(r)o(ecommend)h
(how)h(to)f(impr)o(ove)g(the)g(composition.)g(T)-7 b(o)21
b(further)g(supplement)f(the)h(users)f(compr)o(ehension)-150
4836 y(of)j(the)f(cor)o(e)g(tool,)g(we)g(may)g(also)g(add)g(quizzes)f
(or)i(interactive)e(media)h(that)g(cements)f(the)h(users)f
(understanding)h(of)h(musical)e(theory)-9 b(.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fh(3)p 0 TeXcolorgray -148 -144 a Ff(2)96 b(O)p
Fg(V)t(E)t(R)t(A)t(L)t(L)33 b Ff(D)t Fg(E)t(S)t(C)t(R)t(I)t(P)t(T)t(I)t
(O)t(N)-150 26 y Fc(2.1)79 b(Pr)n(oduct)24 b(P)n(er)o(spective)-150
197 y Fd(The)e(app)f(is)g(self-contained,)i(and)f(does)g(not)h
(interact)e(with)h(any)g(other)h(applications)d(or)j(pr)o(otocols.)-31
341 y(It)c(will)g(be)g(r)o(eleased)g(for)h(the)f(iPhone,)g(iPad,)g(and)
g(Andr)o(oid)h(tablets)e(and)h(phones.)g(It)g(needs)g(to)g(be)g
(developed)h(for)g(touch)f(interfaces)-150 485 y(and)30
b(limited)g(scr)o(een)f(space.)f(Users)h(of)h(the)g(apps)e(ar)o(e)h
(expected)g(to)h(use)f(thumb)g(and)h(index)g(\002ngers.)f(It)g(should)h
(operate)f(under)h(a)-150 629 y(variety)22 b(of)g(r)o(esolutions.)-150
904 y Fc(2.2)79 b(Pr)n(oduct)24 b(Functions)-150 1074
y Fd(The)29 b(main)f(function)i(for)f(this)g(pr)o(oduct)g(is)f(to)h(pr)
o(ovide)g(a)g(simple)f(way)g(for)i(new)f(musical)f(students)g(to)h
(understand)g(the)g(basics)e(of)-150 1218 y(musical)e(theory)-9
b(.)27 b(This)f(will)h(be)f(accomplished)g(by)g(using)g(an)g
(interactive)g(cir)o(cle)g(that)g(describes)g(the)g(r)o(elationship)g
(between)g(notes.)-150 1362 y(Along)g(with)g(the)f(supplementary)f(r)o
(efer)o(ence)i(pages)f(the)h(users)e(should)i(be)g(able)f(to)h(use)f
(this)h(tool)g(to)g(gain)g(some)f(insight)h(on)g(bring)-150
1507 y(notes)h(together)g(in)g(a)f(logical)h(manner)-6
b(.)27 b(The)f(secondary)h(function)h(of)f(this)g(pr)o(oduct)f(is)h(to)
g(be)g(used)f(as)g(a)h(tool)g(for)h(composers.)e(This)-150
1651 y(will)c(be)g(accomplished)g(by)g(pr)o(oviding,)g(in)g(a)g(sense,)
f(a)h(map)f(of)i(the)e(dif)o(fer)o(ent)i(possible)e(r)o(outes)g(for)i
(traversing)f(the)g(musical)f(terrain.)-150 1925 y Fc(2.3)79
b(User)22 b(Characteristics)-150 2095 y Fd(Ther)o(e)31
b(will)h(be)f(two)g(main)h(use)e(cases)h(for)h(this)f(tool.)h(The)f
(\002rst)g(will)h(be)f(for)h(musical)f(students)f(learning)i(an)f
(instr)o(ument)g(or)h(just)-150 2240 y(curious)27 b(about)g(musical)f
(theory)-9 b(.)28 b(For)f(this)g(use)g(case)f(the)i(tool)f(should)h(be)
f(able)f(to)i(describe)f(the)g(basics)f(of)i(how)g(to)f(derive)h
(logical)-150 2384 y(and)23 b(objectively)f(pleasant)g(music.)g(This)g
(will)i(give)e(the)h(newly)h(curious)e(individual)i(some)e(insight)h
(on)h(why)f(some)g(gr)o(oups)f(of)h(notes)-150 2528 y(sound)f(better)g
(together)g(than)g(others.)-31 2672 y(The)h(other)i(use)e(case)h(for)h
(this)e(tool)i(will)f(be)g(for)h(composers)f(attempting)e(to)i(better)g
(understand)g(how)h(to)f(adapt)f(chor)o(d)i(pr)o(ogr)o(es-)-150
2817 y(sions)h(to)g(their)g(will.)g(For)h(this)f(use)f(case)h(the)g
(tool)g(should)g(be)g(able)g(to)g(aid)g(composers)g(in)g(discovering)h
(the)f(options)g(they)g(have)f(for)-150 2961 y(their)c(choice)h(in)f
(pr)o(ogr)o(ession.)f(This)g(could)i(be)f(in)g(the)g(form)h(of)g
(attempting)d(to)i(link)h(keys)e(together)h(by)g(using)g(the)g(tool)g
(as)g(a)f(mapping)-150 3105 y(device)k(between)f(destinations.)g(This)f
(could)j(also)e(just)f(as)h(well)h(help)f(them)g(to)h(discover)g(their)
g(cr)o(eativity)f(in)g(exploring)h(new)g(r)o(outes)-150
3249 y(of)f(key)f(pr)o(ogr)o(ession.)-31 3394 y(Ther)o(e)j(wont)i(be)f
(too)h(many)f(expectations)e(on)j(the)f(users)g(of)h(the)f(this)g(tool)
g(as)g(it)g(will)h(be)f(lar)o(gely)g(educational)f(and)i(not)f(r)o
(equir)o(e)-150 3538 y(much)37 b(for)h(knowledge)g(of)f(musical)f
(theory)i(to)f(understand.)g(Though)g(it)f(can)h(be)g(used)g(as)f(a)h
(tool)g(the)g(main)g(function)g(of)h(the)-150 3682 y(application)20
b(is)i(still)f(to)h(help)f(educate)g(people)g(on)h(music)f(theory)h
(and)g(ther)o(efor)o(e)f(should)h(be)g(able)f(to)g(answer)g(many)h(of)g
(the)g(common)-150 3826 y(question)f(for)i(the)e(novice)h(musical)e
(student.)h(The)g(only)h(expectation)e(I)h(could)h(see)f(for)i(the)e(r)
o(ecurring)h(user)-6 b(,)21 b(is)g(an)g(inter)o(est)f(in)i(musical)-150
3971 y(education.)-150 4245 y Fc(2.4)79 b(Constraints)-150
4415 y Fd(The)20 b(constraints)g(on)h(this)f(pr)o(oject)f(will)i
(mainly)f(be)h(time)f(and)h(scope.)e(Resear)o(ch)h(still)g(needs)g(to)h
(be)f(done)i(to)e(determine)h(all)f(the)h(details)-150
4559 y(of)28 b(what)e(featur)o(es)g(should)h(not)g(be)g(appr)o(oached)f
(or)h(cover)o(ed)g(by)g(the)g(application)f(as)g(well)h(as)f(which)i
(featur)o(es)d(in)j(addition)f(to)g(the)-150 4703 y(cor)o(e)i
(application)e(we)i(will)g(have)f(time)g(to)h(implement.)e(Ther)o(e)h
(will)h(also)f(be)h(many)f(obstacles)f(in)i(implementing)f(the)g
(application)-150 4848 y(including;)21 b(determining)h(the)e(workload)i
(of)g(each)e(gr)o(oup)h(member)-6 b(,)20 b(getting)h(the)g(application)
e(to)i(work)h(on)f(both)g(andr)o(oid)g(and)g(apple)-150
4992 y(platforms,)j(verifying)h(the)f(usability)f(of)j(our)e(pr)o
(oduct,)h(and)f(r)o(eleasing)g(the)g(application)g(the)g(r)o(espective)
f(stor)o(es.)g(The)i(r)o(elated)f(topics)-150 5136 y(that)h(could)h(be)
f(included)h(in)f(the)h(application)e(or)i(the)f(application)f(built)h
(of)o(f)h(of)g(this)f(tool)g(ar)o(e)g(very)h(numer)o(ous)e(so)h(a)g
(big)g(constraint)-150 5280 y(for)e(this)f(pr)o(oject)f(will)h(be)g
(determining)h(how)f(we)g(design)g(the)g(framework)h(to)f(allow)g(for)h
(adaptability)-9 b(.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fh(4)p 0 TeXcolorgray -150 -144 a Fc(2.5)79 b(Assumptions)25
b(and)d(Dependencies)-150 26 y Fd(This)29 b(SRS)g(assumes)e(that)j(the)
f(app)g(can)g(be)h(written)g(for)g(a)g(virtual)f(machine)g(which)h(pr)o
(ovides:)f(a)h(touch)f(scr)o(een)h(interface,)f(visual)-150
171 y(display)-9 b(,)27 b(timers,)g(and)g(permanent)g(memory)-9
b(.)28 b(The)f(code)h(written)g(for)g(the)g(virtual)f(machine)g(should)
h(be)f(automatically)f(translated)-150 315 y(to)g(code)h(that)f
(executes)f(on)i(the)f(various)f(devices.)h(If)g(this)g(is)g(not)h
(possible,)d(the)i(development)g(of)h(this)f(app)f(will)h(be)g(limited)
h(to)f(the)-150 459 y(iPhone)c(and)h(iPad)e(devices)h(only)-9
b(.)-148 758 y Ff(3)96 b(S)t Fg(P)t(E)t(C)t(I)t(FI)t(C)34
b Ff(R)t Fg(E)t(Q)s(U)t(I)t(R)t(E)t(M)t(E)t(N)t(T)t(S)-150
928 y Fc(3.1)79 b(Interactive)23 b(Cir)n(c)n(le)g(Of)f(Fifths:)i(00)p
0 TeXcolorgray -31 1098 a Fb(\017)p 0 TeXcolorgray 95
w Fd(User)d(can)h(see)g(corr)o(ect)g(notes)g(ar)o(e)g(on)g(the)g
(inside)g(of)h(cir)o(cle)p 0 TeXcolorgray -31 1243 a
Fb(\017)p 0 TeXcolorgray 95 w Fd(User)e(can)h(change)g(r)o(oot)h(note)f
(of)g(cir)o(cle)h(by)f(r)o(otating)f(the)h(cir)o(cle)h(or)f(using)g
(the)g(sidebar)p 0 TeXcolorgray -31 1387 a Fb(\017)p
0 TeXcolorgray 95 w Fd(User)f(can)h(see)g(the)g(corr)o(ect)g(chor)o(d)h
(quality)f(numberings)f(above)h(notes)g(within)g(selected)g(key)p
0 TeXcolorgray -31 1531 a Fb(\017)p 0 TeXcolorgray 95
w Fd(Cir)o(cle)g(of)h(Fifths)f(sidebar)p 0 TeXcolorgray
187 1725 a Fe(\226)p 0 TeXcolorgray 94 w Fd(User)g(can)g(see)f(the)h
(notes)g(of)h(the)f(curr)o(ent)g(key)g(in)g(a)g(sidebar)p
0 TeXcolorgray 187 1869 a Fe(\226)p 0 TeXcolorgray 94
w Fd(User)g(can)g(visualize)e(the)i(tonal)g(gravity)g(of)h(the)e(curr)o
(ent)h(key)p 0 TeXcolorgray -31 2063 a Fb(\017)p 0 TeXcolorgray
95 w Fd(Parallel)f(and)h(Relative)f(Keys)i(within)f(Cir)o(cle)g(of)h
(Fifths)p 0 TeXcolorgray 187 2258 a Fe(\226)p 0 TeXcolorgray
94 w Fd(User)f(can)g(add)g(a)g(keys)g(parallel)f(and)h(r)o(elative)f
(keys)h(to)g(the)g(cir)o(cle)g(of)h(\002fths)f(iteratively)p
0 TeXcolorgray 187 2402 a Fe(\226)p 0 TeXcolorgray 94
w Fd(User)g(can)g(easily)f(visualize)g(and)h(understand)g(the)g(\003ow)
g(between)g(keys)p 0 TeXcolorgray 187 2546 a Fe(\226)p
0 TeXcolorgray 94 w Fd(User)g(can)g(see)f(the)h(pr)o(oper)g(numbering)g
(of)h(chor)o(ds)f(in)g(parallel)g(and)g(r)o(elative)f(keys)p
0 TeXcolorgray 187 2690 a Fe(\226)p 0 TeXcolorgray 94
w Fd(When)i(user)e(changes)h(the)g(r)o(oot)g(key)-9 b(,)22
b(parallel)g(and)g(r)o(elative)f(keys)h(change)g(as)f(well)-150
2964 y Fc(3.2)79 b(Composition)25 b(P)n(a)o(g)q(e:)d(01)p
0 TeXcolorgray -31 3135 a Fb(\017)p 0 TeXcolorgray 95
w Fd(User)f(has)h(ability)f(to)h(cr)o(eate)g(a)f(few)i(measur)o(es)d
(of)j(chor)o(d)g(pr)o(ogr)o(ession)p 0 TeXcolorgray -31
3279 a Fb(\017)p 0 TeXcolorgray 95 w Fd(User)e(has)h(an)f(easy)h(way)g
(of)g(inputting)g(chor)o(ds)g(whether)g(it)g(be)g(with)g(the)g(cir)o
(cle)h(of)f(\002fths)g(or)h(an)f(alter)o(ed)f(keyboar)o(d)p
0 TeXcolorgray -31 3423 a Fb(\017)p 0 TeXcolorgray 95
w Fd(User)g(can)h(have)g(the)g(application)f(analyze)g(a)g(composition)
h(and)g(determine)h(if)f(they)g(followed)i(the)e(r)o(ules)g(of)h(tonal)
e(gravity)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 TeXcolorgray 4018
-296 a Fh(5)p 0 TeXcolorgray -150 -144 a Fc(3.3)79 b(Ref)o(erence)23
b(and)g(T)-7 b(utorial)23 b(P)n(a)o(g)q(es:)f(02)-150
26 y Fd(Refer)o(ence)g(pages)f(ar)o(e)h(pages)e(of)j(text)f(and)g
(non-interactive)g(visuals)e(describing)j(the)f(various)f(music)h
(theory)g(concepts.)p 0 TeXcolorgray -31 220 a Fb(\017)p
0 TeXcolorgray 95 w Fd(Schedule)g(of)g(T)-7 b(onal)22
b(Gravity)g(r)o(efer)o(ence)g(page)p 0 TeXcolorgray -31
365 a Fb(\017)p 0 TeXcolorgray 95 w Fd(Perfect)g(Fifth)h(r)o(efer)o
(ence)f(page)p 0 TeXcolorgray -31 509 a Fb(\017)p 0 TeXcolorgray
95 w Fd(Chor)o(d)h(r)o(efer)o(ence)f(page)p 0 TeXcolorgray
-31 653 a Fb(\017)p 0 TeXcolorgray 95 w Fd(Enharmonic)h(Equivalents)e
(page)-148 952 y Ff(4)96 b(D)t Fg(E)t(V)t(E)t(L)t(O)t(P)t(M)t(E)t(N)t
(T)35 b Ff(F)t Fg(L)t(OW)1425 997 y

 1425 997 a 1425 997
a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 226.77448 212.60094 0.0 -226.77448 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -113.38724 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 14.17339 -28.3468 moveto

 14.17339 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 28.34679 -28.3468 moveto

 28.34679 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 42.52019 -28.3468 moveto

 42.52019 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 56.69359 -28.3468 moveto

 56.69359 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 70.86697 -28.3468 moveto

 70.86697 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 85.04037 -28.3468 moveto

 85.04037 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 99.21378 -28.3468 moveto

 99.21378 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 113.38718 -28.3468 moveto

 113.38718 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 127.56056 -28.3468 moveto

 127.56056 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 141.73396 -28.3468 moveto

 141.73396 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 155.90736 -28.3468 moveto

 155.90736 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 170.08076 -28.3468 moveto

 170.08076 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 184.25415 -28.3468 moveto

 184.25415 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 198.42755 -28.3468 moveto

 198.42755 -226.77448 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -28.3468 moveto

 212.60095 -28.3468 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -56.69362 moveto

 212.60095 -56.69362 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -85.04042 moveto

 212.60095 -85.04042 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -113.38724 moveto

 212.60095 -113.38724 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -141.73404 moveto

 212.60095 -141.73404 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -170.08086 moveto

 212.60095 -170.08086 lineto

 pgfstr

 restore

 save

 [ 0.3985 1.99255 ] 0.0 setdash

 0.0 -198.42766 moveto

 212.60095 -198.42766 lineto

 pgfstr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 70.86696 0.0 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 35.43347 -8.50412 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 17.80243 -11.5041 ] concat

 pgfs



 0 setgray
 1425 997 a Fa(Fall)21 b(2017)1425
997 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 70.86696 70.86697 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 106.30046 -8.50412 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 82.45938 -11.5041 ] concat

 pgfs



 0 setgray
 1425 997 a Fa(W)l(inter)g(2018)1425
997 y


 pgfr

 restore

 restore

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 17.00824 70.86696 141.73396 -17.00824 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 177.16745 -8.50412 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 153.6324 -11.5041 ] concat

 pgfs



 0 setgray
 1425 997 a Fa(Spring)g(2018)1425 997
y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 113.38718 70.86697 -48.18947 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 127.56056 -42.5202 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -127.5873 -45.9822 ] concat

 pgfs



 0 setgray
 1425 997 a Fd(Interactive)h(Cir)o(cle)g(of)h(Fifths:)e(00)
1425 997 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 113.38718 70.86697 -76.53629 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 127.56056 -70.867 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -95.45865 -74.329 ] concat

 pgfs



 0 setgray
 1425 997 a Fd(Composition)h(Page:)g(01)1425
997 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 113.38718 70.86697 -104.88309 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 127.56056 -99.21382 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -140.36516 -102.67581 ] concat

 pgfs



 0 setgray
 1425 997 a Fd(Refer)o(ence)h(and)f(T)-7
b(utorial)21 b(Pages:)g(02)1425 997 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 85.04037 99.21378 -133.2299 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 141.73396 -127.56062 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -185.88898 -131.02263 ] concat

 pgfs



 0 setgray
 1425
997 a Fd(Add)i(Str)o(etch)e(Featur)o(es)g(and)h(\002nishing)g(touches)
1425 997 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 85.04037 99.21378 -161.5767 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 141.73396 -155.90744 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -51.08403 -159.36943 ] concat

 pgfs



 0 setgray
 1425 997 a Fd(QA)g(T)-7 b(esting)1425
997 y


 pgfr

 restore

 restore

 save

 save

 /pgffc{1 setgray}def

 save

 /pgffc{1 setgray}def

 11.33855 28.34679 170.08076 -189.92352 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 184.25415 -184.25424 ] concat

 pgfs



 0 setgray
 1425 997 a


 pgfr

 restore

 restore

 restore

 save

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -67.7754 -187.71625 ] concat

 pgfs



 0 setgray
 1425 997 a Fd(Finalize)22 b(Pr)o(oject)1425
997 y


 pgfr

 restore

 restore

 save

 0.3985 pgfw

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
